{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manh Lam\\\\Desktop\\\\PRN231_Project\\\\frontend\\\\src\\\\views\\\\Storage\\\\Storage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Drawer, Radio, Space, Table, message, Button } from 'antd';\nimport { getListStorage, getSupllierStorage } from '../../services/storageService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Storage() {\n  _s();\n  getListStorage().then(console.log);\n  const [list, setList] = useState([]);\n  const [dataSuplier, setDataSuplier] = useState([]);\n  const [dataSource, setDataSource] = useState([]);\n  const getData = useCallback(() => {\n    //setLoading(true);\n    getListStorage().then(res => {\n      //const listAsssignmentId = res.data.assignmentIdReq;\n      //setList(listAsssignmentId);\n      const convertedData = res.data.map(data => {\n        const {\n          productId,\n          productName,\n          quantity,\n          unitName\n        } = data;\n        return {\n          key: productId,\n          productId,\n          productName,\n          quantity,\n          unitName\n        };\n      });\n      setDataSource(convertedData);\n      //setTotalElements(res.data.totalElements);\n    }).catch(error => {\n      message.error(error.message);\n    });\n\n    //setLoading(false);\n  }, []);\n  useEffect(() => {\n    getData();\n  }, [getData]);\n  const [open, setOpen] = useState(false);\n  const showDrawer = record => {\n    getSupllierStorage(record).then(res => {\n      const {\n        supplierId,\n        displayName,\n        email,\n        phone,\n        address,\n        contractDate,\n        moreInfo\n      } = res.data;\n      setDataSuplier([{\n        label: 'supplierId',\n        details: supplierId\n      }, {\n        label: 'Asset Name',\n        details: displayName\n      }, {\n        label: 'Assigner',\n        details: email\n      }, {\n        label: 'Assignee',\n        details: phone\n      }, {\n        label: 'Specification',\n        details: address\n      }, {\n        label: 'Assign Date',\n        details: contractDate\n      }, {\n        label: 'Assign Note',\n        details: moreInfo\n      }]);\n    });\n    setOpen(true);\n  };\n  const onClose = () => {\n    setOpen(false);\n  };\n  let displayIdCounter = 1;\n  const columns = [{\n    title: 'ProductId',\n    dataIndex: 'productId',\n    key: dataSource.productId,\n    render: () => displayIdCounter++\n  }, {\n    title: 'Product Name',\n    dataIndex: 'productName',\n    key: dataSource.productName,\n    sorter: {\n      compare: (a, b) => a.productName - b.productName,\n      multiple: 3\n    },\n    onCell: () => {\n      return {\n        onClick: () => {\n          showDrawer();\n        }\n      };\n    }\n  }, {\n    title: 'Quantity',\n    dataIndex: 'quantity',\n    key: dataSource.quantity,\n    sorter: {\n      compare: (a, b) => a.quantity - b.quantity,\n      multiple: 2\n    }\n  }, {\n    title: 'Unit Name',\n    dataIndex: 'unitName',\n    key: dataSource.unitName,\n    sorter: {\n      compare: (a, b) => a.unitName - b.unitName,\n      multiple: 1\n    }\n  }];\n  const onChangeTable = (pagination, filters, sorter, extra) => {\n    console.log('params', pagination, filters, sorter, extra);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: showDrawer,\n      children: \"Open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      title: \"Basic Drawer\",\n      placement: \"right\",\n      onClose: onClose,\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: dataSource.productName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Some contents...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Some contents...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: dataSource,\n      onChange: onChangeTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true);\n}\n_s(Storage, \"Te0mC4fmrboZdYta0zVSk5Ctk/o=\");\n_c = Storage;\n;\nexport default Storage;\nvar _c;\n$RefreshReg$(_c, \"Storage\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","Drawer","Radio","Space","Table","message","Button","getListStorage","getSupllierStorage","jsxDEV","_jsxDEV","Fragment","_Fragment","Storage","_s","then","console","log","list","setList","dataSuplier","setDataSuplier","dataSource","setDataSource","getData","res","convertedData","data","map","productId","productName","quantity","unitName","key","catch","error","open","setOpen","showDrawer","record","supplierId","displayName","email","phone","address","contractDate","moreInfo","label","details","onClose","displayIdCounter","columns","title","dataIndex","render","sorter","compare","a","b","multiple","onCell","onClick","onChangeTable","pagination","filters","extra","children","type","fileName","_jsxFileName","lineNumber","columnNumber","placement","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Manh Lam/Desktop/PRN231_Project/frontend/src/views/Storage/Storage.jsx"],"sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\r\nimport { Drawer, Radio, Space, Table, message ,Button} from 'antd';\r\n\r\nimport { getListStorage ,getSupllierStorage} from '../../services/storageService';\r\n\r\nfunction Storage() {\r\n\r\n  getListStorage().then(console.log)\r\n  const [list, setList] = useState([]);\r\n  const [dataSuplier, setDataSuplier] = useState([]);\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const getData = useCallback(() => {\r\n    //setLoading(true);\r\n    getListStorage()\r\n      .then((res) => {\r\n        //const listAsssignmentId = res.data.assignmentIdReq;\r\n        //setList(listAsssignmentId);\r\n        const convertedData = res.data.map((data) => {\r\n          const {\r\n            productId,\r\n            productName,\r\n            quantity,\r\n            unitName,\r\n          } = data;\r\n\r\n          return {\r\n            key: productId,\r\n            productId,\r\n            productName,\r\n            quantity,\r\n            unitName,\r\n          };\r\n        });\r\n        setDataSource(convertedData);\r\n        //setTotalElements(res.data.totalElements);\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.message);\r\n\r\n      });\r\n\r\n    //setLoading(false);\r\n  }, []);\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const showDrawer = (record) => {\r\n      getSupllierStorage(record).then((res) => {\r\n\r\n        const { supplierId, displayName, email, phone,address, contractDate, moreInfo } = res.data;\r\n\r\n        setDataSuplier([\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'supplierId',\r\n\t\t\t\t\t\tdetails: supplierId,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Asset Name',\r\n\t\t\t\t\t\tdetails: displayName,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Assigner',\r\n\t\t\t\t\t\tdetails: email,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Assignee',\r\n\t\t\t\t\t\tdetails: phone,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Specification',\r\n\t\t\t\t\t\tdetails: address,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Assign Date',\r\n\t\t\t\t\t\tdetails: contractDate,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: 'Assign Note',\r\n\t\t\t\t\t\tdetails: moreInfo,\r\n\t\t\t\t\t},\r\n\t\t\t\t]);\r\n      })\r\n     \r\n\r\n    setOpen(true);\r\n  };\r\n  const onClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  let displayIdCounter = 1;\r\n  const columns = [\r\n    {\r\n      title: 'ProductId',\r\n      dataIndex: 'productId',\r\n      key: dataSource.productId,\r\n      render: () => displayIdCounter++,\r\n    },\r\n    {\r\n      title: 'Product Name',\r\n      dataIndex: 'productName',\r\n      key: dataSource.productName,\r\n      sorter: {\r\n        compare: (a, b) => a.productName - b.productName,\r\n        multiple: 3,\r\n      },\r\n      onCell: () => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tonClick: () => {\r\n\t\t\t\t\t\tshowDrawer();\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t},\r\n    },\r\n    {\r\n      title: 'Quantity',\r\n      dataIndex: 'quantity',\r\n      key: dataSource.quantity,\r\n      sorter: {\r\n        compare: (a, b) => a.quantity - b.quantity,\r\n        multiple: 2,\r\n      },\r\n    },\r\n    {\r\n      title: 'Unit Name',\r\n      dataIndex: 'unitName',\r\n      key: dataSource.unitName,\r\n      sorter: {\r\n        compare: (a, b) => a.unitName - b.unitName,\r\n        multiple: 1,\r\n      },\r\n    },\r\n  ];\r\n  \r\n  const onChangeTable = (pagination, filters, sorter, extra) => {\r\n    console.log('params', pagination, filters, sorter, extra);\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n       <Button type=\"primary\" onClick={showDrawer}>\r\n        Open\r\n      </Button>\r\n      <Drawer title=\"Basic Drawer\" placement=\"right\" onClose={onClose} open={open}>\r\n        <p>{dataSource.productName}</p>\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n      </Drawer>\r\n  \r\n\r\n      <Table columns={columns} dataSource={dataSource} onChange={onChangeTable} />;\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Storage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}