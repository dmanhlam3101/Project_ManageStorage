{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manh Lam\\\\Desktop\\\\PRN231_Project\\\\frontend\\\\src\\\\views\\\\Storage\\\\Storage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { Button, Table } from 'antd';\nimport { getListStorage } from '../../services/storageService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Storage() {\n  _s();\n  getListStorage().then(console.log);\n  const [list, setList] = useState([]);\n  const [dataSource, setDataSource] = useState([]);\n  const getData = useCallback(() => {\n    setLoading(true);\n    getAssignments(filter).then(res => {\n      //const listAsssignmentId = res.data.assignmentIdReq;\n      //setList(listAsssignmentId);\n      const convertedData = res.data.content.map(data => {\n        const {\n          productId,\n          assetId,\n          assignee,\n          assigner,\n          assignDate,\n          state\n        } = data;\n        return {\n          key: assignmentId,\n          assignmentId,\n          assetCode: `${assetId.assetId}`,\n          assetName: `${assetId.name}`,\n          assigner: `${assigner.username}`,\n          assignee: `${assignee.username}`,\n          assignDate,\n          state: titleCase(state.replaceAll('_', ' '))\n        };\n      });\n      setDataSource(convertedData);\n      //setTotalElements(res.data.totalElements);\n    }).catch(error => {\n      message.error(error.message);\n    });\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    getData();\n  }, [getData]);\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name'\n  }, {\n    title: 'Chinese Score',\n    dataIndex: 'chinese',\n    sorter: {\n      compare: (a, b) => a.chinese - b.chinese,\n      multiple: 3\n    }\n  }, {\n    title: 'Math Score',\n    dataIndex: 'math',\n    sorter: {\n      compare: (a, b) => a.math - b.math,\n      multiple: 2\n    }\n  }, {\n    title: 'English Score',\n    dataIndex: 'english',\n    sorter: {\n      compare: (a, b) => a.english - b.english,\n      multiple: 1\n    }\n  }];\n  const data = [{\n    key: '1',\n    name: 'John Brown',\n    chinese: 98,\n    math: 60,\n    english: 70\n  }, {\n    key: '2',\n    name: 'Jim Green',\n    chinese: 98,\n    math: 66,\n    english: 89\n  }, {\n    key: '3',\n    name: 'Joe Black',\n    chinese: 98,\n    math: 90,\n    english: 70\n  }, {\n    key: '4',\n    name: 'Jim Red',\n    chinese: 88,\n    math: 99,\n    english: 89\n  }];\n  const onChange = (pagination, filters, sorter, extra) => {\n    console.log('params', pagination, filters, sorter, extra);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: data,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 6\n    }, this), \";\"]\n  }, void 0, true);\n}\n_s(Storage, \"KhBbkxBewtLBnk4L90CAoQ1nn8E=\");\n_c = Storage;\n;\nexport default Storage;\nvar _c;\n$RefreshReg$(_c, \"Storage\");","map":{"version":3,"names":["React","useCallback","Button","Table","getListStorage","jsxDEV","_jsxDEV","Fragment","_Fragment","Storage","_s","then","console","log","list","setList","useState","dataSource","setDataSource","getData","setLoading","getAssignments","filter","res","convertedData","data","content","map","productId","assetId","assignee","assigner","assignDate","state","key","assignmentId","assetCode","assetName","name","username","titleCase","replaceAll","catch","error","message","useEffect","columns","title","dataIndex","sorter","compare","a","b","chinese","multiple","math","english","onChange","pagination","filters","extra","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Manh Lam/Desktop/PRN231_Project/frontend/src/views/Storage/Storage.jsx"],"sourcesContent":["import React, { useCallback } from 'react';\r\nimport { Button ,Table} from 'antd';\r\n\r\nimport { getListStorage } from '../../services/storageService';\r\n\r\nfunction Storage() {\r\n    \r\n    getListStorage().then(console.log)\r\n    const [list, setList] = useState([]);\r\n    const [dataSource, setDataSource] = useState([]);\r\n    const getData = useCallback(() => {\r\n      setLoading(true);\r\n      getAssignments(filter)\r\n        .then((res) => {\r\n          //const listAsssignmentId = res.data.assignmentIdReq;\r\n          //setList(listAsssignmentId);\r\n          const convertedData = res.data.content.map((data) => {\r\n            const {\r\n              productId,\r\n              assetId,\r\n              assignee,\r\n              assigner,\r\n              assignDate,\r\n              state,\r\n            } = data;\r\n  \r\n            return {\r\n              key: assignmentId,\r\n              assignmentId,\r\n              assetCode: `${assetId.assetId}`,\r\n              assetName: `${assetId.name}`,\r\n              assigner: `${assigner.username}`,\r\n              assignee: `${assignee.username}`,\r\n              assignDate,\r\n              state: titleCase(state.replaceAll('_', ' ')),\r\n            };\r\n          });\r\n          setDataSource(convertedData);\r\n          //setTotalElements(res.data.totalElements);\r\n        })\r\n        .catch((error) => {\r\n          message.error(error.message);\r\n        });\r\n  \r\n      setLoading(false);\r\n    }, []);\r\n    useEffect(() => {\r\n      getData();\r\n    }, [getData]);\r\n    const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n          title: 'Chinese Score',\r\n          dataIndex: 'chinese',\r\n          sorter: {\r\n            compare: (a, b) => a.chinese - b.chinese,\r\n            multiple: 3,\r\n          },\r\n        },\r\n        {\r\n          title: 'Math Score',\r\n          dataIndex: 'math',\r\n          sorter: {\r\n            compare: (a, b) => a.math - b.math,\r\n            multiple: 2,\r\n          },\r\n        },\r\n        {\r\n          title: 'English Score',\r\n          dataIndex: 'english',\r\n          sorter: {\r\n            compare: (a, b) => a.english - b.english,\r\n            multiple: 1,\r\n          },\r\n        },\r\n      ];\r\n      const data = [\r\n        {\r\n          key: '1',\r\n          name: 'John Brown',\r\n          chinese: 98,\r\n          math: 60,\r\n          english: 70,\r\n        },\r\n        {\r\n          key: '2',\r\n          name: 'Jim Green',\r\n          chinese: 98,\r\n          math: 66,\r\n          english: 89,\r\n        },\r\n        {\r\n          key: '3',\r\n          name: 'Joe Black',\r\n          chinese: 98,\r\n          math: 90,\r\n          english: 70,\r\n        },\r\n        {\r\n          key: '4',\r\n          name: 'Jim Red',\r\n          chinese: 88,\r\n          math: 99,\r\n          english: 89,\r\n        },\r\n      ];\r\n      const onChange = (pagination, filters, sorter, extra) => {\r\n        console.log('params', pagination, filters, sorter, extra);\r\n      };\r\n\r\n  return (\r\n    <>\r\n     <Table columns={columns} dataSource={data} onChange={onChange} />;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Storage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,SAASC,MAAM,EAAEC,KAAK,QAAO,MAAM;AAEnC,SAASC,cAAc,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/D,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAEfN,cAAc,CAAC,CAAC,CAACO,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMG,OAAO,GAAGlB,WAAW,CAAC,MAAM;IAChCmB,UAAU,CAAC,IAAI,CAAC;IAChBC,cAAc,CAACC,MAAM,CAAC,CACnBX,IAAI,CAAEY,GAAG,IAAK;MACb;MACA;MACA,MAAMC,aAAa,GAAGD,GAAG,CAACE,IAAI,CAACC,OAAO,CAACC,GAAG,CAAEF,IAAI,IAAK;QACnD,MAAM;UACJG,SAAS;UACTC,OAAO;UACPC,QAAQ;UACRC,QAAQ;UACRC,UAAU;UACVC;QACF,CAAC,GAAGR,IAAI;QAER,OAAO;UACLS,GAAG,EAAEC,YAAY;UACjBA,YAAY;UACZC,SAAS,EAAG,GAAEP,OAAO,CAACA,OAAQ,EAAC;UAC/BQ,SAAS,EAAG,GAAER,OAAO,CAACS,IAAK,EAAC;UAC5BP,QAAQ,EAAG,GAAEA,QAAQ,CAACQ,QAAS,EAAC;UAChCT,QAAQ,EAAG,GAAEA,QAAQ,CAACS,QAAS,EAAC;UAChCP,UAAU;UACVC,KAAK,EAAEO,SAAS,CAACP,KAAK,CAACQ,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC;QAC7C,CAAC;MACH,CAAC,CAAC;MACFvB,aAAa,CAACM,aAAa,CAAC;MAC5B;IACF,CAAC,CAAC,CACDkB,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;IAC9B,CAAC,CAAC;IAEJxB,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EACNyB,SAAS,CAAC,MAAM;IACd1B,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EACb,MAAM2B,OAAO,GAAG,CACZ;IACEC,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE;EACb,CAAC,EACD;IACED,KAAK,EAAE,eAAe;IACtBC,SAAS,EAAE,SAAS;IACpBC,MAAM,EAAE;MACNC,OAAO,EAAEA,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,OAAO,GAAGD,CAAC,CAACC,OAAO;MACxCC,QAAQ,EAAE;IACZ;EACF,CAAC,EACD;IACEP,KAAK,EAAE,YAAY;IACnBC,SAAS,EAAE,MAAM;IACjBC,MAAM,EAAE;MACNC,OAAO,EAAEA,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACI,IAAI,GAAGH,CAAC,CAACG,IAAI;MAClCD,QAAQ,EAAE;IACZ;EACF,CAAC,EACD;IACEP,KAAK,EAAE,eAAe;IACtBC,SAAS,EAAE,SAAS;IACpBC,MAAM,EAAE;MACNC,OAAO,EAAEA,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACK,OAAO,GAAGJ,CAAC,CAACI,OAAO;MACxCF,QAAQ,EAAE;IACZ;EACF,CAAC,CACF;EACD,MAAM7B,IAAI,GAAG,CACX;IACES,GAAG,EAAE,GAAG;IACRI,IAAI,EAAE,YAAY;IAClBe,OAAO,EAAE,EAAE;IACXE,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE;EACX,CAAC,EACD;IACEtB,GAAG,EAAE,GAAG;IACRI,IAAI,EAAE,WAAW;IACjBe,OAAO,EAAE,EAAE;IACXE,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE;EACX,CAAC,EACD;IACEtB,GAAG,EAAE,GAAG;IACRI,IAAI,EAAE,WAAW;IACjBe,OAAO,EAAE,EAAE;IACXE,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE;EACX,CAAC,EACD;IACEtB,GAAG,EAAE,GAAG;IACRI,IAAI,EAAE,SAAS;IACfe,OAAO,EAAE,EAAE;IACXE,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE;EACX,CAAC,CACF;EACD,MAAMC,QAAQ,GAAGA,CAACC,UAAU,EAAEC,OAAO,EAAEV,MAAM,EAAEW,KAAK,KAAK;IACvDhD,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE6C,UAAU,EAAEC,OAAO,EAAEV,MAAM,EAAEW,KAAK,CAAC;EAC3D,CAAC;EAEL,oBACEtD,OAAA,CAAAE,SAAA;IAAAqD,QAAA,gBACCvD,OAAA,CAACH,KAAK;MAAC2C,OAAO,EAAEA,OAAQ;MAAC7B,UAAU,EAAEQ,IAAK;MAACgC,QAAQ,EAAEA;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAClE;EAAA,eAAE,CAAC;AAEP;AAACvD,EAAA,CAjHQD,OAAO;AAAAyD,EAAA,GAAPzD,OAAO;AAiHf;AAED,eAAeA,OAAO;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}