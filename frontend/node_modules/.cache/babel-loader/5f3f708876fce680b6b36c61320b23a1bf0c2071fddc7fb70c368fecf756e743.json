{"ast":null,"code":"// import authService from './auth';\nimport axios from 'axios';\nconst axiosClient = axios.create({\n  baseURL: 'http://localhost:8080',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// const requestIntercept = axiosClient.interceptors.request.use((request) =>\n// \trequestHandler(request),\n// );\n\naxiosClient.interceptors.response.use(response => successHandler(response), error => errorHandler(error));\nconst errorHandler = error => {\n  var _error$response, _error$response2, _error$response3, _error$response4;\n  console.log('error', error);\n  /*\r\n   * When response code is 401, try to refresh the token or logOut.\r\n   * Eject the interceptor so it doesn't loop in case\r\n   * token refresh causes the 401 response\r\n   */\n  if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    axios.interceptors.response.eject(requestIntercept);\n    // clear old token\n    localStorage.clear();\n    // redirect to login page\n    window.location.href = window.location.origin + '/';\n  }\n  if ((error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 415) {\n    // show toast message chung là bạn không có quyền\n  }\n\n  // server error\n  if ((error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 500) {}\n  return Promise.reject(error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data);\n};\nconst successHandler = response => {\n  return response;\n};\n\n// const requestHandler = (request) => {\n// \tconst token = localStorage.getItem('token');\n\n// \tif (token && token !== null) {\n// \t\trequest.headers['Authorization'] = `Bearer ${token}`;\n// \t}\n\n// \treturn request;\n// };\n\nexport default axiosClient;","map":{"version":3,"names":["axios","axiosClient","create","baseURL","headers","interceptors","response","use","successHandler","error","errorHandler","_error$response","_error$response2","_error$response3","_error$response4","console","log","status","eject","requestIntercept","localStorage","clear","window","location","href","origin","Promise","reject","data"],"sources":["C:/Users/Manh Lam/frontend/src/services/httpCommon.js"],"sourcesContent":["// import authService from './auth';\r\nimport axios from 'axios';\r\n\r\nconst axiosClient = axios.create({\r\n\tbaseURL: 'http://localhost:8080',\r\n\theaders: {\r\n\t\t'Content-Type': 'application/json',\r\n\t},\r\n});\r\n\r\n// const requestIntercept = axiosClient.interceptors.request.use((request) =>\r\n// \trequestHandler(request),\r\n// );\r\n\r\naxiosClient.interceptors.response.use(\r\n\t(response) => successHandler(response),\r\n\t(error) => errorHandler(error),\r\n);\r\n\r\nconst errorHandler = (error) => {\r\n\tconsole.log('error', error);\r\n\t/*\r\n\t * When response code is 401, try to refresh the token or logOut.\r\n\t * Eject the interceptor so it doesn't loop in case\r\n\t * token refresh causes the 401 response\r\n\t */\r\n\tif (error?.response?.status === 401) {\r\n\t\taxios.interceptors.response.eject(requestIntercept);\r\n\t\t// clear old token\r\n\t\tlocalStorage.clear();\r\n\t\t// redirect to login page\r\n\t\twindow.location.href = window.location.origin + '/';\r\n\t}\r\n\tif (error?.response?.status === 415) {\r\n\t\t// show toast message chung là bạn không có quyền\r\n\t}\r\n\r\n\t// server error\r\n\tif (error?.response?.status === 500) {\r\n\t}\r\n\r\n\treturn Promise.reject(error?.response?.data);\r\n};\r\n\r\nconst successHandler = (response) => {\r\n\treturn response;\r\n};\r\n\r\n// const requestHandler = (request) => {\r\n// \tconst token = localStorage.getItem('token');\r\n\r\n// \tif (token && token !== null) {\r\n// \t\trequest.headers['Authorization'] = `Bearer ${token}`;\r\n// \t}\r\n\r\n// \treturn request;\r\n// };\r\n\r\nexport default axiosClient;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAM,CAAC;EAChCC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACR,cAAc,EAAE;EACjB;AACD,CAAC,CAAC;;AAEF;AACA;AACA;;AAEAH,WAAW,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CACnCD,QAAQ,IAAKE,cAAc,CAACF,QAAQ,CAAC,EACrCG,KAAK,IAAKC,YAAY,CAACD,KAAK,CAC9B,CAAC;AAED,MAAMC,YAAY,GAAID,KAAK,IAAK;EAAA,IAAAE,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;EAC/BC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEP,KAAK,CAAC;EAC3B;AACD;AACA;AACA;AACA;EACC,IAAI,CAAAA,KAAK,aAALA,KAAK,wBAAAE,eAAA,GAALF,KAAK,CAAEH,QAAQ,cAAAK,eAAA,uBAAfA,eAAA,CAAiBM,MAAM,MAAK,GAAG,EAAE;IACpCjB,KAAK,CAACK,YAAY,CAACC,QAAQ,CAACY,KAAK,CAACC,gBAAgB,CAAC;IACnD;IACAC,YAAY,CAACC,KAAK,CAAC,CAAC;IACpB;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGF,MAAM,CAACC,QAAQ,CAACE,MAAM,GAAG,GAAG;EACpD;EACA,IAAI,CAAAhB,KAAK,aAALA,KAAK,wBAAAG,gBAAA,GAALH,KAAK,CAAEH,QAAQ,cAAAM,gBAAA,uBAAfA,gBAAA,CAAiBK,MAAM,MAAK,GAAG,EAAE;IACpC;EAAA;;EAGD;EACA,IAAI,CAAAR,KAAK,aAALA,KAAK,wBAAAI,gBAAA,GAALJ,KAAK,CAAEH,QAAQ,cAAAO,gBAAA,uBAAfA,gBAAA,CAAiBI,MAAM,MAAK,GAAG,EAAE,CACrC;EAEA,OAAOS,OAAO,CAACC,MAAM,CAAClB,KAAK,aAALA,KAAK,wBAAAK,gBAAA,GAALL,KAAK,CAAEH,QAAQ,cAAAQ,gBAAA,uBAAfA,gBAAA,CAAiBc,IAAI,CAAC;AAC7C,CAAC;AAED,MAAMpB,cAAc,GAAIF,QAAQ,IAAK;EACpC,OAAOA,QAAQ;AAChB,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,eAAeL,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}