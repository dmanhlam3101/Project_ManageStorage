{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manh Lam\\\\Desktop\\\\PRN231_Project\\\\frontend\\\\src\\\\views\\\\Storage\\\\Storage.jsx\";\nimport React from 'react';\nimport { Button, Table } from 'antd';\nimport { getListStorage } from '../../services/storageService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Storage() {\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name'\n  }, {\n    title: 'Chinese Score',\n    dataIndex: 'chinese',\n    sorter: {\n      compare: (a, b) => a.chinese - b.chinese,\n      multiple: 3\n    }\n  }, {\n    title: 'Math Score',\n    dataIndex: 'math',\n    sorter: {\n      compare: (a, b) => a.math - b.math,\n      multiple: 2\n    }\n  }, {\n    title: 'English Score',\n    dataIndex: 'english',\n    sorter: {\n      compare: (a, b) => a.english - b.english,\n      multiple: 1\n    }\n  }];\n  const data = [{\n    key: '1',\n    name: 'John Brown',\n    chinese: 98,\n    math: 60,\n    english: 70\n  }, {\n    key: '2',\n    name: 'Jim Green',\n    chinese: 98,\n    math: 66,\n    english: 89\n  }, {\n    key: '3',\n    name: 'Joe Black',\n    chinese: 98,\n    math: 90,\n    english: 70\n  }, {\n    key: '4',\n    name: 'Jim Red',\n    chinese: 88,\n    math: 99,\n    english: 89\n  }];\n  const onChange = (pagination, filters, sorter, extra) => {\n    console.log('params', pagination, filters, sorter, extra);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: data,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }, this), \";\"]\n  }, void 0, true);\n}\n_c = Storage;\n;\nexport default Storage;\nvar _c;\n$RefreshReg$(_c, \"Storage\");","map":{"version":3,"names":["React","Button","Table","getListStorage","jsxDEV","_jsxDEV","Fragment","_Fragment","Storage","columns","title","dataIndex","sorter","compare","a","b","chinese","multiple","math","english","data","key","name","onChange","pagination","filters","extra","console","log","children","dataSource","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Manh Lam/Desktop/PRN231_Project/frontend/src/views/Storage/Storage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Button ,Table} from 'antd';\r\n\r\nimport { getListStorage } from '../../services/storageService';\r\n\r\nfunction Storage() {\r\n    \r\n    const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n          title: 'Chinese Score',\r\n          dataIndex: 'chinese',\r\n          sorter: {\r\n            compare: (a, b) => a.chinese - b.chinese,\r\n            multiple: 3,\r\n          },\r\n        },\r\n        {\r\n          title: 'Math Score',\r\n          dataIndex: 'math',\r\n          sorter: {\r\n            compare: (a, b) => a.math - b.math,\r\n            multiple: 2,\r\n          },\r\n        },\r\n        {\r\n          title: 'English Score',\r\n          dataIndex: 'english',\r\n          sorter: {\r\n            compare: (a, b) => a.english - b.english,\r\n            multiple: 1,\r\n          },\r\n        },\r\n      ];\r\n      const data = [\r\n        {\r\n          key: '1',\r\n          name: 'John Brown',\r\n          chinese: 98,\r\n          math: 60,\r\n          english: 70,\r\n        },\r\n        {\r\n          key: '2',\r\n          name: 'Jim Green',\r\n          chinese: 98,\r\n          math: 66,\r\n          english: 89,\r\n        },\r\n        {\r\n          key: '3',\r\n          name: 'Joe Black',\r\n          chinese: 98,\r\n          math: 90,\r\n          english: 70,\r\n        },\r\n        {\r\n          key: '4',\r\n          name: 'Jim Red',\r\n          chinese: 88,\r\n          math: 99,\r\n          english: 89,\r\n        },\r\n      ];\r\n      const onChange = (pagination, filters, sorter, extra) => {\r\n        console.log('params', pagination, filters, sorter, extra);\r\n      };\r\n\r\n  return (\r\n    <>\r\n     <Table columns={columns} dataSource={data} onChange={onChange} />;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Storage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,QAAO,MAAM;AAEnC,SAASC,cAAc,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/D,SAASC,OAAOA,CAAA,EAAG;EAEf,MAAMC,OAAO,GAAG,CACZ;IACEC,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE;EACb,CAAC,EACD;IACED,KAAK,EAAE,eAAe;IACtBC,SAAS,EAAE,SAAS;IACpBC,MAAM,EAAE;MACNC,OAAO,EAAEA,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,OAAO,GAAGD,CAAC,CAACC,OAAO;MACxCC,QAAQ,EAAE;IACZ;EACF,CAAC,EACD;IACEP,KAAK,EAAE,YAAY;IACnBC,SAAS,EAAE,MAAM;IACjBC,MAAM,EAAE;MACNC,OAAO,EAAEA,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACI,IAAI,GAAGH,CAAC,CAACG,IAAI;MAClCD,QAAQ,EAAE;IACZ;EACF,CAAC,EACD;IACEP,KAAK,EAAE,eAAe;IACtBC,SAAS,EAAE,SAAS;IACpBC,MAAM,EAAE;MACNC,OAAO,EAAEA,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACK,OAAO,GAAGJ,CAAC,CAACI,OAAO;MACxCF,QAAQ,EAAE;IACZ;EACF,CAAC,CACF;EACD,MAAMG,IAAI,GAAG,CACX;IACEC,GAAG,EAAE,GAAG;IACRC,IAAI,EAAE,YAAY;IAClBN,OAAO,EAAE,EAAE;IACXE,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE;EACX,CAAC,EACD;IACEE,GAAG,EAAE,GAAG;IACRC,IAAI,EAAE,WAAW;IACjBN,OAAO,EAAE,EAAE;IACXE,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE;EACX,CAAC,EACD;IACEE,GAAG,EAAE,GAAG;IACRC,IAAI,EAAE,WAAW;IACjBN,OAAO,EAAE,EAAE;IACXE,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE;EACX,CAAC,EACD;IACEE,GAAG,EAAE,GAAG;IACRC,IAAI,EAAE,SAAS;IACfN,OAAO,EAAE,EAAE;IACXE,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE;EACX,CAAC,CACF;EACD,MAAMI,QAAQ,GAAGA,CAACC,UAAU,EAAEC,OAAO,EAAEb,MAAM,EAAEc,KAAK,KAAK;IACvDC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,UAAU,EAAEC,OAAO,EAAEb,MAAM,EAAEc,KAAK,CAAC;EAC3D,CAAC;EAEL,oBACErB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACCxB,OAAA,CAACH,KAAK;MAACO,OAAO,EAAEA,OAAQ;MAACqB,UAAU,EAAEV,IAAK;MAACG,QAAQ,EAAEA;IAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAClE;EAAA,eAAE,CAAC;AAEP;AAACC,EAAA,GAvEQ3B,OAAO;AAuEf;AAED,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}