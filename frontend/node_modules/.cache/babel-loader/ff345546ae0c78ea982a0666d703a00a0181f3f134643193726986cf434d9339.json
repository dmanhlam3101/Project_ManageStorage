{"ast":null,"code":"import { useStyleRegister } from '@ant-design/cssinjs';\nimport { warning } from 'rc-util';\nimport { useContext } from 'react';\nimport { ConfigContext } from '../../config-provider/context';\nimport { genCommonStyle, genLinkStyle } from '../../style';\nimport useToken from '../useToken';\nimport statisticToken, { merge as mergeToken } from './statistic';\nexport default function genComponentStyleHook(component, styleFn, getDefaultToken, options) {\n  return prefixCls => {\n    const [theme, token, hashId] = useToken();\n    const {\n      getPrefixCls,\n      iconPrefixCls,\n      csp\n    } = useContext(ConfigContext);\n    const rootPrefixCls = getPrefixCls();\n    // Shared config\n    const sharedConfig = {\n      theme,\n      token,\n      hashId,\n      nonce: () => csp === null || csp === void 0 ? void 0 : csp.nonce,\n      clientOnly: options === null || options === void 0 ? void 0 : options.clientOnly,\n      // antd is always at top of styles\n      order: -999\n    };\n    // Generate style for all a tags in antd component.\n    useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      clientOnly: false,\n      path: ['Shared', rootPrefixCls]\n    }), () => [{\n      // Link\n      '&': genLinkStyle(token)\n    }]);\n    return [useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\n      path: [component, prefixCls, iconPrefixCls]\n    }), () => {\n      const {\n        token: proxyToken,\n        flush\n      } = statisticToken(token);\n      const customComponentToken = Object.assign({}, token[component]);\n      if (options === null || options === void 0 ? void 0 : options.deprecatedTokens) {\n        const {\n          deprecatedTokens\n        } = options;\n        deprecatedTokens.forEach(_ref => {\n          let [oldTokenKey, newTokenKey] = _ref;\n          var _a;\n          if (process.env.NODE_ENV !== 'production') {\n            process.env.NODE_ENV !== \"production\" ? warning(!(customComponentToken === null || customComponentToken === void 0 ? void 0 : customComponentToken[oldTokenKey]), `The token '${String(oldTokenKey)}' of ${component} had deprecated, use '${String(newTokenKey)}' instead.`) : void 0;\n          }\n          // Should wrap with `if` clause, or there will be `undefined` in object.\n          if ((customComponentToken === null || customComponentToken === void 0 ? void 0 : customComponentToken[oldTokenKey]) || (customComponentToken === null || customComponentToken === void 0 ? void 0 : customComponentToken[newTokenKey])) {\n            (_a = customComponentToken[newTokenKey]) !== null && _a !== void 0 ? _a : customComponentToken[newTokenKey] = customComponentToken === null || customComponentToken === void 0 ? void 0 : customComponentToken[oldTokenKey];\n          }\n        });\n      }\n      const defaultComponentToken = typeof getDefaultToken === 'function' ? getDefaultToken(mergeToken(proxyToken, customComponentToken !== null && customComponentToken !== void 0 ? customComponentToken : {})) : getDefaultToken;\n      const mergedComponentToken = Object.assign(Object.assign({}, defaultComponentToken), customComponentToken);\n      const componentCls = `.${prefixCls}`;\n      const mergedToken = mergeToken(proxyToken, {\n        componentCls,\n        prefixCls,\n        iconCls: `.${iconPrefixCls}`,\n        antCls: `.${rootPrefixCls}`\n      }, mergedComponentToken);\n      const styleInterpolation = styleFn(mergedToken, {\n        hashId,\n        prefixCls,\n        rootPrefixCls,\n        iconPrefixCls,\n        overrideComponentToken: customComponentToken\n      });\n      flush(component, mergedComponentToken);\n      return [(options === null || options === void 0 ? void 0 : options.resetStyle) === false ? null : genCommonStyle(token, prefixCls), styleInterpolation];\n    }), hashId];\n  };\n}","map":{"version":3,"names":["useStyleRegister","warning","useContext","ConfigContext","genCommonStyle","genLinkStyle","useToken","statisticToken","merge","mergeToken","genComponentStyleHook","component","styleFn","getDefaultToken","options","prefixCls","theme","token","hashId","getPrefixCls","iconPrefixCls","csp","rootPrefixCls","sharedConfig","nonce","clientOnly","order","Object","assign","path","proxyToken","flush","customComponentToken","deprecatedTokens","forEach","_ref","oldTokenKey","newTokenKey","_a","process","env","NODE_ENV","String","defaultComponentToken","mergedComponentToken","componentCls","mergedToken","iconCls","antCls","styleInterpolation","overrideComponentToken","resetStyle"],"sources":["C:/Users/trung/OneDrive/Desktop/PRN231(BL5)/Project_ManageStorage/frontend/node_modules/antd/es/theme/util/genComponentStyleHook.js"],"sourcesContent":["import { useStyleRegister } from '@ant-design/cssinjs';\r\nimport { warning } from 'rc-util';\r\nimport { useContext } from 'react';\r\nimport { ConfigContext } from '../../config-provider/context';\r\nimport { genCommonStyle, genLinkStyle } from '../../style';\r\nimport useToken from '../useToken';\r\nimport statisticToken, { merge as mergeToken } from './statistic';\r\nexport default function genComponentStyleHook(component, styleFn, getDefaultToken, options) {\r\n  return prefixCls => {\r\n    const [theme, token, hashId] = useToken();\r\n    const {\r\n      getPrefixCls,\r\n      iconPrefixCls,\r\n      csp\r\n    } = useContext(ConfigContext);\r\n    const rootPrefixCls = getPrefixCls();\r\n    // Shared config\r\n    const sharedConfig = {\r\n      theme,\r\n      token,\r\n      hashId,\r\n      nonce: () => csp === null || csp === void 0 ? void 0 : csp.nonce,\r\n      clientOnly: options === null || options === void 0 ? void 0 : options.clientOnly,\r\n      // antd is always at top of styles\r\n      order: -999\r\n    };\r\n    // Generate style for all a tags in antd component.\r\n    useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\r\n      clientOnly: false,\r\n      path: ['Shared', rootPrefixCls]\r\n    }), () => [{\r\n      // Link\r\n      '&': genLinkStyle(token)\r\n    }]);\r\n    return [useStyleRegister(Object.assign(Object.assign({}, sharedConfig), {\r\n      path: [component, prefixCls, iconPrefixCls]\r\n    }), () => {\r\n      const {\r\n        token: proxyToken,\r\n        flush\r\n      } = statisticToken(token);\r\n      const customComponentToken = Object.assign({}, token[component]);\r\n      if (options === null || options === void 0 ? void 0 : options.deprecatedTokens) {\r\n        const {\r\n          deprecatedTokens\r\n        } = options;\r\n        deprecatedTokens.forEach(_ref => {\r\n          let [oldTokenKey, newTokenKey] = _ref;\r\n          var _a;\r\n          if (process.env.NODE_ENV !== 'production') {\r\n            process.env.NODE_ENV !== \"production\" ? warning(!(customComponentToken === null || customComponentToken === void 0 ? void 0 : customComponentToken[oldTokenKey]), `The token '${String(oldTokenKey)}' of ${component} had deprecated, use '${String(newTokenKey)}' instead.`) : void 0;\r\n          }\r\n          // Should wrap with `if` clause, or there will be `undefined` in object.\r\n          if ((customComponentToken === null || customComponentToken === void 0 ? void 0 : customComponentToken[oldTokenKey]) || (customComponentToken === null || customComponentToken === void 0 ? void 0 : customComponentToken[newTokenKey])) {\r\n            (_a = customComponentToken[newTokenKey]) !== null && _a !== void 0 ? _a : customComponentToken[newTokenKey] = customComponentToken === null || customComponentToken === void 0 ? void 0 : customComponentToken[oldTokenKey];\r\n          }\r\n        });\r\n      }\r\n      const defaultComponentToken = typeof getDefaultToken === 'function' ? getDefaultToken(mergeToken(proxyToken, customComponentToken !== null && customComponentToken !== void 0 ? customComponentToken : {})) : getDefaultToken;\r\n      const mergedComponentToken = Object.assign(Object.assign({}, defaultComponentToken), customComponentToken);\r\n      const componentCls = `.${prefixCls}`;\r\n      const mergedToken = mergeToken(proxyToken, {\r\n        componentCls,\r\n        prefixCls,\r\n        iconCls: `.${iconPrefixCls}`,\r\n        antCls: `.${rootPrefixCls}`\r\n      }, mergedComponentToken);\r\n      const styleInterpolation = styleFn(mergedToken, {\r\n        hashId,\r\n        prefixCls,\r\n        rootPrefixCls,\r\n        iconPrefixCls,\r\n        overrideComponentToken: customComponentToken\r\n      });\r\n      flush(component, mergedComponentToken);\r\n      return [(options === null || options === void 0 ? void 0 : options.resetStyle) === false ? null : genCommonStyle(token, prefixCls), styleInterpolation];\r\n    }), hashId];\r\n  };\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}