{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport MutateObserver from '@rc-component/mutate-observer';\nimport classNames from 'classnames';\nimport React, { useEffect, useRef } from 'react';\nimport { getPixelRatio, getStyleStr, reRendering, rotateWatermark } from './utils';\nimport theme from '../theme';\n/**\r\n * Base size of the canvas, 1 for parallel layout and 2 for alternate layout\r\n * Only alternate layout is currently supported\r\n */\nconst BaseSize = 2;\nconst FontGap = 3;\nconst Watermark = props => {\n  var _a, _b;\n  const {\n    /**\r\n     * The antd content layer zIndex is basically below 10\r\n     * https://github.com/ant-design/ant-design/blob/6192403b2ce517c017f9e58a32d58774921c10cd/components/style/themes/default.less#L335\r\n     */\n    zIndex = 9,\n    rotate = -22,\n    width,\n    height,\n    image,\n    content,\n    font = {},\n    style,\n    className,\n    rootClassName,\n    gap = [100, 100],\n    offset,\n    children\n  } = props;\n  const {\n    token\n  } = theme.useToken();\n  const {\n    color = token.colorFill,\n    fontSize = token.fontSizeLG,\n    fontWeight = 'normal',\n    fontStyle = 'normal',\n    fontFamily = 'sans-serif'\n  } = font;\n  const [gapX, gapY] = gap;\n  const gapXCenter = gapX / 2;\n  const gapYCenter = gapY / 2;\n  const offsetLeft = (_a = offset === null || offset === void 0 ? void 0 : offset[0]) !== null && _a !== void 0 ? _a : gapXCenter;\n  const offsetTop = (_b = offset === null || offset === void 0 ? void 0 : offset[1]) !== null && _b !== void 0 ? _b : gapYCenter;\n  const getMarkStyle = () => {\n    const markStyle = {\n      zIndex,\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      width: '100%',\n      height: '100%',\n      pointerEvents: 'none',\n      backgroundRepeat: 'repeat'\n    };\n    /** Calculate the style of the offset */\n    let positionLeft = offsetLeft - gapXCenter;\n    let positionTop = offsetTop - gapYCenter;\n    if (positionLeft > 0) {\n      markStyle.left = `${positionLeft}px`;\n      markStyle.width = `calc(100% - ${positionLeft}px)`;\n      positionLeft = 0;\n    }\n    if (positionTop > 0) {\n      markStyle.top = `${positionTop}px`;\n      markStyle.height = `calc(100% - ${positionTop}px)`;\n      positionTop = 0;\n    }\n    markStyle.backgroundPosition = `${positionLeft}px ${positionTop}px`;\n    return markStyle;\n  };\n  const containerRef = useRef(null);\n  const watermarkRef = useRef();\n  const stopObservation = useRef(false);\n  const destroyWatermark = () => {\n    if (watermarkRef.current) {\n      watermarkRef.current.remove();\n      watermarkRef.current = undefined;\n    }\n  };\n  const appendWatermark = (base64Url, markWidth) => {\n    var _a;\n    if (containerRef.current && watermarkRef.current) {\n      stopObservation.current = true;\n      watermarkRef.current.setAttribute('style', getStyleStr(Object.assign(Object.assign({}, getMarkStyle()), {\n        backgroundImage: `url('${base64Url}')`,\n        backgroundSize: `${(gapX + markWidth) * BaseSize}px`\n      })));\n      (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.append(watermarkRef.current);\n      // Delayed execution\n      setTimeout(() => {\n        stopObservation.current = false;\n      });\n    }\n  };\n  /**\r\n   * Get the width and height of the watermark. The default values are as follows\r\n   * Image: [120, 64]; Content: It's calculated by content;\r\n   */\n  const getMarkSize = ctx => {\n    let defaultWidth = 120;\n    let defaultHeight = 64;\n    if (!image && ctx.measureText) {\n      ctx.font = `${Number(fontSize)}px ${fontFamily}`;\n      const contents = Array.isArray(content) ? content : [content];\n      const widths = contents.map(item => ctx.measureText(item).width);\n      defaultWidth = Math.ceil(Math.max.apply(Math, _toConsumableArray(widths)));\n      defaultHeight = Number(fontSize) * contents.length + (contents.length - 1) * FontGap;\n    }\n    return [width !== null && width !== void 0 ? width : defaultWidth, height !== null && height !== void 0 ? height : defaultHeight];\n  };\n  const fillTexts = (ctx, drawX, drawY, drawWidth, drawHeight) => {\n    const ratio = getPixelRatio();\n    const mergedFontSize = Number(fontSize) * ratio;\n    ctx.font = `${fontStyle} normal ${fontWeight} ${mergedFontSize}px/${drawHeight}px ${fontFamily}`;\n    ctx.fillStyle = color;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'top';\n    ctx.translate(drawWidth / 2, 0);\n    const contents = Array.isArray(content) ? content : [content];\n    contents === null || contents === void 0 ? void 0 : contents.forEach((item, index) => {\n      ctx.fillText(item !== null && item !== void 0 ? item : '', drawX, drawY + index * (mergedFontSize + FontGap * ratio));\n    });\n  };\n  const drawText = (canvas, ctx, drawX, drawY, drawWidth, drawHeight, alternateRotateX, alternateRotateY, alternateDrawX, alternateDrawY, markWidth) => {\n    fillTexts(ctx, drawX, drawY, drawWidth, drawHeight);\n    /** Fill the interleaved text after rotation */\n    ctx.restore();\n    rotateWatermark(ctx, alternateRotateX, alternateRotateY, rotate);\n    fillTexts(ctx, alternateDrawX, alternateDrawY, drawWidth, drawHeight);\n    appendWatermark(canvas.toDataURL(), markWidth);\n  };\n  const renderWatermark = () => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    if (ctx) {\n      if (!watermarkRef.current) {\n        watermarkRef.current = document.createElement('div');\n      }\n      const ratio = getPixelRatio();\n      const [markWidth, markHeight] = getMarkSize(ctx);\n      const canvasWidth = (gapX + markWidth) * ratio;\n      const canvasHeight = (gapY + markHeight) * ratio;\n      canvas.setAttribute('width', `${canvasWidth * BaseSize}px`);\n      canvas.setAttribute('height', `${canvasHeight * BaseSize}px`);\n      const drawX = gapX * ratio / 2;\n      const drawY = gapY * ratio / 2;\n      const drawWidth = markWidth * ratio;\n      const drawHeight = markHeight * ratio;\n      const rotateX = (drawWidth + gapX * ratio) / 2;\n      const rotateY = (drawHeight + gapY * ratio) / 2;\n      /** Alternate drawing parameters */\n      const alternateDrawX = drawX + canvasWidth;\n      const alternateDrawY = drawY + canvasHeight;\n      const alternateRotateX = rotateX + canvasWidth;\n      const alternateRotateY = rotateY + canvasHeight;\n      ctx.save();\n      rotateWatermark(ctx, rotateX, rotateY, rotate);\n      if (image) {\n        const img = new Image();\n        img.onload = () => {\n          ctx.drawImage(img, drawX, drawY, drawWidth, drawHeight);\n          /** Draw interleaved pictures after rotation */\n          ctx.restore();\n          rotateWatermark(ctx, alternateRotateX, alternateRotateY, rotate);\n          ctx.drawImage(img, alternateDrawX, alternateDrawY, drawWidth, drawHeight);\n          appendWatermark(canvas.toDataURL(), markWidth);\n        };\n        img.onerror = () => drawText(canvas, ctx, drawX, drawY, drawWidth, drawHeight, alternateRotateX, alternateRotateY, alternateDrawX, alternateDrawY, markWidth);\n        img.crossOrigin = 'anonymous';\n        img.referrerPolicy = 'no-referrer';\n        img.src = image;\n      } else {\n        drawText(canvas, ctx, drawX, drawY, drawWidth, drawHeight, alternateRotateX, alternateRotateY, alternateDrawX, alternateDrawY, markWidth);\n      }\n    }\n  };\n  const onMutate = mutations => {\n    if (stopObservation.current) {\n      return;\n    }\n    mutations.forEach(mutation => {\n      if (reRendering(mutation, watermarkRef.current)) {\n        destroyWatermark();\n        renderWatermark();\n      }\n    });\n  };\n  useEffect(renderWatermark, [rotate, zIndex, width, height, image, content, color, fontSize, fontWeight, fontStyle, fontFamily, gapX, gapY, offsetLeft, offsetTop]);\n  return /*#__PURE__*/React.createElement(MutateObserver, {\n    onMutate: onMutate\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    className: classNames(className, rootClassName),\n    style: Object.assign({\n      position: 'relative'\n    }, style)\n  }, children));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Watermark.displayName = 'Watermark';\n}\nexport default Watermark;","map":{"version":3,"names":["_toConsumableArray","MutateObserver","classNames","React","useEffect","useRef","getPixelRatio","getStyleStr","reRendering","rotateWatermark","theme","BaseSize","FontGap","Watermark","props","_a","_b","zIndex","rotate","width","height","image","content","font","style","className","rootClassName","gap","offset","children","token","useToken","color","colorFill","fontSize","fontSizeLG","fontWeight","fontStyle","fontFamily","gapX","gapY","gapXCenter","gapYCenter","offsetLeft","offsetTop","getMarkStyle","markStyle","position","left","top","pointerEvents","backgroundRepeat","positionLeft","positionTop","backgroundPosition","containerRef","watermarkRef","stopObservation","destroyWatermark","current","remove","undefined","appendWatermark","base64Url","markWidth","setAttribute","Object","assign","backgroundImage","backgroundSize","append","setTimeout","getMarkSize","ctx","defaultWidth","defaultHeight","measureText","Number","contents","Array","isArray","widths","map","item","Math","ceil","max","apply","length","fillTexts","drawX","drawY","drawWidth","drawHeight","ratio","mergedFontSize","fillStyle","textAlign","textBaseline","translate","forEach","index","fillText","drawText","canvas","alternateRotateX","alternateRotateY","alternateDrawX","alternateDrawY","restore","toDataURL","renderWatermark","document","createElement","getContext","markHeight","canvasWidth","canvasHeight","rotateX","rotateY","save","img","Image","onload","drawImage","onerror","crossOrigin","referrerPolicy","src","onMutate","mutations","mutation","ref","process","env","NODE_ENV","displayName"],"sources":["C:/Users/trung/OneDrive/Desktop/PRN231(BL5)/Project_ManageStorage/frontend/node_modules/antd/es/watermark/index.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\r\nimport MutateObserver from '@rc-component/mutate-observer';\r\nimport classNames from 'classnames';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { getPixelRatio, getStyleStr, reRendering, rotateWatermark } from './utils';\r\nimport theme from '../theme';\r\n/**\r\n * Base size of the canvas, 1 for parallel layout and 2 for alternate layout\r\n * Only alternate layout is currently supported\r\n */\r\nconst BaseSize = 2;\r\nconst FontGap = 3;\r\nconst Watermark = props => {\r\n  var _a, _b;\r\n  const {\r\n    /**\r\n     * The antd content layer zIndex is basically below 10\r\n     * https://github.com/ant-design/ant-design/blob/6192403b2ce517c017f9e58a32d58774921c10cd/components/style/themes/default.less#L335\r\n     */\r\n    zIndex = 9,\r\n    rotate = -22,\r\n    width,\r\n    height,\r\n    image,\r\n    content,\r\n    font = {},\r\n    style,\r\n    className,\r\n    rootClassName,\r\n    gap = [100, 100],\r\n    offset,\r\n    children\r\n  } = props;\r\n  const {\r\n    token\r\n  } = theme.useToken();\r\n  const {\r\n    color = token.colorFill,\r\n    fontSize = token.fontSizeLG,\r\n    fontWeight = 'normal',\r\n    fontStyle = 'normal',\r\n    fontFamily = 'sans-serif'\r\n  } = font;\r\n  const [gapX, gapY] = gap;\r\n  const gapXCenter = gapX / 2;\r\n  const gapYCenter = gapY / 2;\r\n  const offsetLeft = (_a = offset === null || offset === void 0 ? void 0 : offset[0]) !== null && _a !== void 0 ? _a : gapXCenter;\r\n  const offsetTop = (_b = offset === null || offset === void 0 ? void 0 : offset[1]) !== null && _b !== void 0 ? _b : gapYCenter;\r\n  const getMarkStyle = () => {\r\n    const markStyle = {\r\n      zIndex,\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      pointerEvents: 'none',\r\n      backgroundRepeat: 'repeat'\r\n    };\r\n    /** Calculate the style of the offset */\r\n    let positionLeft = offsetLeft - gapXCenter;\r\n    let positionTop = offsetTop - gapYCenter;\r\n    if (positionLeft > 0) {\r\n      markStyle.left = `${positionLeft}px`;\r\n      markStyle.width = `calc(100% - ${positionLeft}px)`;\r\n      positionLeft = 0;\r\n    }\r\n    if (positionTop > 0) {\r\n      markStyle.top = `${positionTop}px`;\r\n      markStyle.height = `calc(100% - ${positionTop}px)`;\r\n      positionTop = 0;\r\n    }\r\n    markStyle.backgroundPosition = `${positionLeft}px ${positionTop}px`;\r\n    return markStyle;\r\n  };\r\n  const containerRef = useRef(null);\r\n  const watermarkRef = useRef();\r\n  const stopObservation = useRef(false);\r\n  const destroyWatermark = () => {\r\n    if (watermarkRef.current) {\r\n      watermarkRef.current.remove();\r\n      watermarkRef.current = undefined;\r\n    }\r\n  };\r\n  const appendWatermark = (base64Url, markWidth) => {\r\n    var _a;\r\n    if (containerRef.current && watermarkRef.current) {\r\n      stopObservation.current = true;\r\n      watermarkRef.current.setAttribute('style', getStyleStr(Object.assign(Object.assign({}, getMarkStyle()), {\r\n        backgroundImage: `url('${base64Url}')`,\r\n        backgroundSize: `${(gapX + markWidth) * BaseSize}px`\r\n      })));\r\n      (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.append(watermarkRef.current);\r\n      // Delayed execution\r\n      setTimeout(() => {\r\n        stopObservation.current = false;\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * Get the width and height of the watermark. The default values are as follows\r\n   * Image: [120, 64]; Content: It's calculated by content;\r\n   */\r\n  const getMarkSize = ctx => {\r\n    let defaultWidth = 120;\r\n    let defaultHeight = 64;\r\n    if (!image && ctx.measureText) {\r\n      ctx.font = `${Number(fontSize)}px ${fontFamily}`;\r\n      const contents = Array.isArray(content) ? content : [content];\r\n      const widths = contents.map(item => ctx.measureText(item).width);\r\n      defaultWidth = Math.ceil(Math.max.apply(Math, _toConsumableArray(widths)));\r\n      defaultHeight = Number(fontSize) * contents.length + (contents.length - 1) * FontGap;\r\n    }\r\n    return [width !== null && width !== void 0 ? width : defaultWidth, height !== null && height !== void 0 ? height : defaultHeight];\r\n  };\r\n  const fillTexts = (ctx, drawX, drawY, drawWidth, drawHeight) => {\r\n    const ratio = getPixelRatio();\r\n    const mergedFontSize = Number(fontSize) * ratio;\r\n    ctx.font = `${fontStyle} normal ${fontWeight} ${mergedFontSize}px/${drawHeight}px ${fontFamily}`;\r\n    ctx.fillStyle = color;\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'top';\r\n    ctx.translate(drawWidth / 2, 0);\r\n    const contents = Array.isArray(content) ? content : [content];\r\n    contents === null || contents === void 0 ? void 0 : contents.forEach((item, index) => {\r\n      ctx.fillText(item !== null && item !== void 0 ? item : '', drawX, drawY + index * (mergedFontSize + FontGap * ratio));\r\n    });\r\n  };\r\n  const drawText = (canvas, ctx, drawX, drawY, drawWidth, drawHeight, alternateRotateX, alternateRotateY, alternateDrawX, alternateDrawY, markWidth) => {\r\n    fillTexts(ctx, drawX, drawY, drawWidth, drawHeight);\r\n    /** Fill the interleaved text after rotation */\r\n    ctx.restore();\r\n    rotateWatermark(ctx, alternateRotateX, alternateRotateY, rotate);\r\n    fillTexts(ctx, alternateDrawX, alternateDrawY, drawWidth, drawHeight);\r\n    appendWatermark(canvas.toDataURL(), markWidth);\r\n  };\r\n  const renderWatermark = () => {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    if (ctx) {\r\n      if (!watermarkRef.current) {\r\n        watermarkRef.current = document.createElement('div');\r\n      }\r\n      const ratio = getPixelRatio();\r\n      const [markWidth, markHeight] = getMarkSize(ctx);\r\n      const canvasWidth = (gapX + markWidth) * ratio;\r\n      const canvasHeight = (gapY + markHeight) * ratio;\r\n      canvas.setAttribute('width', `${canvasWidth * BaseSize}px`);\r\n      canvas.setAttribute('height', `${canvasHeight * BaseSize}px`);\r\n      const drawX = gapX * ratio / 2;\r\n      const drawY = gapY * ratio / 2;\r\n      const drawWidth = markWidth * ratio;\r\n      const drawHeight = markHeight * ratio;\r\n      const rotateX = (drawWidth + gapX * ratio) / 2;\r\n      const rotateY = (drawHeight + gapY * ratio) / 2;\r\n      /** Alternate drawing parameters */\r\n      const alternateDrawX = drawX + canvasWidth;\r\n      const alternateDrawY = drawY + canvasHeight;\r\n      const alternateRotateX = rotateX + canvasWidth;\r\n      const alternateRotateY = rotateY + canvasHeight;\r\n      ctx.save();\r\n      rotateWatermark(ctx, rotateX, rotateY, rotate);\r\n      if (image) {\r\n        const img = new Image();\r\n        img.onload = () => {\r\n          ctx.drawImage(img, drawX, drawY, drawWidth, drawHeight);\r\n          /** Draw interleaved pictures after rotation */\r\n          ctx.restore();\r\n          rotateWatermark(ctx, alternateRotateX, alternateRotateY, rotate);\r\n          ctx.drawImage(img, alternateDrawX, alternateDrawY, drawWidth, drawHeight);\r\n          appendWatermark(canvas.toDataURL(), markWidth);\r\n        };\r\n        img.onerror = () => drawText(canvas, ctx, drawX, drawY, drawWidth, drawHeight, alternateRotateX, alternateRotateY, alternateDrawX, alternateDrawY, markWidth);\r\n        img.crossOrigin = 'anonymous';\r\n        img.referrerPolicy = 'no-referrer';\r\n        img.src = image;\r\n      } else {\r\n        drawText(canvas, ctx, drawX, drawY, drawWidth, drawHeight, alternateRotateX, alternateRotateY, alternateDrawX, alternateDrawY, markWidth);\r\n      }\r\n    }\r\n  };\r\n  const onMutate = mutations => {\r\n    if (stopObservation.current) {\r\n      return;\r\n    }\r\n    mutations.forEach(mutation => {\r\n      if (reRendering(mutation, watermarkRef.current)) {\r\n        destroyWatermark();\r\n        renderWatermark();\r\n      }\r\n    });\r\n  };\r\n  useEffect(renderWatermark, [rotate, zIndex, width, height, image, content, color, fontSize, fontWeight, fontStyle, fontFamily, gapX, gapY, offsetLeft, offsetTop]);\r\n  return /*#__PURE__*/React.createElement(MutateObserver, {\r\n    onMutate: onMutate\r\n  }, /*#__PURE__*/React.createElement(\"div\", {\r\n    ref: containerRef,\r\n    className: classNames(className, rootClassName),\r\n    style: Object.assign({\r\n      position: 'relative'\r\n    }, style)\r\n  }, children));\r\n};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  Watermark.displayName = 'Watermark';\r\n}\r\nexport default Watermark;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}