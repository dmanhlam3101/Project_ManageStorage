{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manh Lam\\\\frontend\\\\src\\\\views\\\\Home\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { Button } from 'antd';\nimport { getAllOrders } from '../../client';\nimport { useCallback, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [dataz, setData] = useState(\"\");\n  const getData = useCallback(() => {\n    getAllOrders().then(res => {\n      // Check if res.data.content is defined and it is an array\n      if (res.data.content && Array.isArray(res.data.content)) {\n        const convertData = res.data.content.map(data => {\n          const {\n            orderId\n            // Add other properties you want to extract from data\n          } = data;\n          return {\n            key: orderId,\n            orderId\n            // Add other properties you want to include in the converted data\n          };\n        });\n\n        setData(convertData);\n      } else {\n        // Handle the case when the data is not in the expected format\n        console.log(\"Invalid data format received\");\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  console.log(dataz);\n  useEffect(() => {\n    getData();\n  }, [getData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      children: \"Primary Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"0k949lElaGhMahVjp094eOlC6eU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Button","getAllOrders","useCallback","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","dataz","setData","getData","then","res","data","content","Array","isArray","convertData","map","orderId","key","console","log","catch","error","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Manh Lam/frontend/src/views/Home/Home.jsx"],"sourcesContent":["import { Button } from 'antd';\r\nimport { getAllOrders } from '../../client';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nconst Home =  () => {\r\n  const [dataz , setData] = useState(\"\");\r\n   \r\n  const getData = useCallback(() => {\r\n    getAllOrders()\r\n      .then((res) => {\r\n        // Check if res.data.content is defined and it is an array\r\n        if (res.data.content && Array.isArray(res.data.content)) {\r\n          const convertData = res.data.content.map((data) => {\r\n            const {\r\n              orderId,\r\n              // Add other properties you want to extract from data\r\n            } = data;\r\n  \r\n            return {\r\n              key: orderId,\r\n              orderId,\r\n              // Add other properties you want to include in the converted data\r\n            };\r\n          });\r\n          setData(convertData);\r\n        } else {\r\n          // Handle the case when the data is not in the expected format\r\n          console.log(\"Invalid data format received\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  console.log(dataz)\r\n  useEffect(() => {\r\n\t\tgetData();\r\n\t}, [getData]);\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\">Primary Button</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,MAAM;AAC7B,SAASC,YAAY,QAAQ,cAAc;AAC3C,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACzD,MAAMC,IAAI,GAAIA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAGC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,OAAO,GAAGX,WAAW,CAAC,MAAM;IAChCD,YAAY,CAAC,CAAC,CACXa,IAAI,CAAEC,GAAG,IAAK;MACb;MACA,IAAIA,GAAG,CAACC,IAAI,CAACC,OAAO,IAAIC,KAAK,CAACC,OAAO,CAACJ,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC,EAAE;QACvD,MAAMG,WAAW,GAAGL,GAAG,CAACC,IAAI,CAACC,OAAO,CAACI,GAAG,CAAEL,IAAI,IAAK;UACjD,MAAM;YACJM;YACA;UACF,CAAC,GAAGN,IAAI;UAER,OAAO;YACLO,GAAG,EAAED,OAAO;YACZA;YACA;UACF,CAAC;QACH,CAAC,CAAC;;QACFV,OAAO,CAACQ,WAAW,CAAC;MACtB,CAAC,MAAM;QACL;QACAI,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC7C;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACNH,OAAO,CAACC,GAAG,CAACd,KAAK,CAAC;EAClBR,SAAS,CAAC,MAAM;IAChBU,OAAO,CAAC,CAAC;EACV,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAGZ,oBACEP,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACEtB,OAAA,CAACN,MAAM;MAAC6B,IAAI,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC,gBAC9C,CAAC;AAEP,CAAC;AAACvB,EAAA,CAzCID,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AA2CV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}