[{"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\index.js":"1","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\App.jsx":"3","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\contexts\\AuthContext.js":"4","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\Guard\\AuthGuard.jsx":"5","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Storage\\Storage.jsx":"6","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Storage\\AddProduct.jsx":"7","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Login\\Login.jsx":"8","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Storage\\EditProduct.jsx":"9","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\components\\Layout\\Layout.jsx":"10","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\supplierService.js":"11","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\unitService.js":"12","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\authService.js":"13","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\storageService.js":"14","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\httpCommon.js":"15","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\constants\\configUrl.js":"16","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\InputStorage\\InputStorage.jsx":"17","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Customer\\CustomerIndex.jsx":"18","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\customerService.js":"19","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Customer\\EditCustomer.jsx":"20","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Customer\\AddCustomer.jsx":"21","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\inputStorageService.js":"22","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\OutputStorage\\OutputStorage.jsx":"23","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\outputStorage.js":"24","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\InputStorage\\AddInputStorage.jsx":"25","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\InputStorage\\EditInputStorage.jsx":"26","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\OutputStorage\\AddOutputStorage.jsx":"27","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\OutputStorage\\EditOutputProduct.jsx":"28","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\DashBoard\\DashBoard.jsx":"29","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\Guard\\AdminGuard.jsx":"30","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Login\\LogOutConfirm.jsx":"31","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\components\\Header\\Header.jsx":"32","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\NotFound\\NotFound.jsx":"33","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\NotFound\\Unthorized.jsx":"34"},{"size":802,"mtime":1692868100447,"results":"35","hashOfConfig":"36"},{"size":375,"mtime":1692713981215,"results":"37","hashOfConfig":"36"},{"size":3461,"mtime":1692871366385,"results":"38","hashOfConfig":"36"},{"size":667,"mtime":1692867998704,"results":"39","hashOfConfig":"36"},{"size":491,"mtime":1692871730819,"results":"40","hashOfConfig":"36"},{"size":7041,"mtime":1692864106685,"results":"41","hashOfConfig":"36"},{"size":3804,"mtime":1692713981230,"results":"42","hashOfConfig":"36"},{"size":3975,"mtime":1692868238490,"results":"43","hashOfConfig":"36"},{"size":4177,"mtime":1692713981230,"results":"44","hashOfConfig":"36"},{"size":3636,"mtime":1692871632212,"results":"45","hashOfConfig":"36"},{"size":194,"mtime":1692776544427,"results":"46","hashOfConfig":"36"},{"size":180,"mtime":1692713981215,"results":"47","hashOfConfig":"36"},{"size":351,"mtime":1692864468376,"results":"48","hashOfConfig":"36"},{"size":863,"mtime":1692717004870,"results":"49","hashOfConfig":"36"},{"size":1517,"mtime":1692713981215,"results":"50","hashOfConfig":"36"},{"size":400,"mtime":1692772775949,"results":"51","hashOfConfig":"36"},{"size":7967,"mtime":1692861258801,"results":"52","hashOfConfig":"36"},{"size":8575,"mtime":1692864113139,"results":"53","hashOfConfig":"36"},{"size":656,"mtime":1692713981215,"results":"54","hashOfConfig":"36"},{"size":4960,"mtime":1692713981215,"results":"55","hashOfConfig":"36"},{"size":3619,"mtime":1692860298009,"results":"56","hashOfConfig":"36"},{"size":824,"mtime":1692845841120,"results":"57","hashOfConfig":"36"},{"size":9584,"mtime":1692864092253,"results":"58","hashOfConfig":"36"},{"size":830,"mtime":1692852204002,"results":"59","hashOfConfig":"36"},{"size":3707,"mtime":1692860358841,"results":"60","hashOfConfig":"36"},{"size":5032,"mtime":1692860477724,"results":"61","hashOfConfig":"36"},{"size":4916,"mtime":1692860476206,"results":"62","hashOfConfig":"36"},{"size":7108,"mtime":1692860446820,"results":"63","hashOfConfig":"36"},{"size":10376,"mtime":1692860478542,"results":"64","hashOfConfig":"36"},{"size":691,"mtime":1692871094181,"results":"65","hashOfConfig":"36"},{"size":1001,"mtime":1692871150749,"results":"66","hashOfConfig":"36"},{"size":1955,"mtime":1692870726064,"results":"67","hashOfConfig":"36"},{"size":298,"mtime":1692870878856,"results":"68","hashOfConfig":"36"},{"size":300,"mtime":1692870958450,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"3ly2u1",{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"73"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"73"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"73"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"73"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\App.jsx",["178"],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\contexts\\AuthContext.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\Guard\\AuthGuard.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Storage\\Storage.jsx",["179"],[],"import React, { useCallback, useState, useEffect } from 'react';\r\nimport { Drawer, Modal, Table, message, Button, Space, Input } from 'antd';\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\nimport { getListStorage, getSupllierStorage, deleteProduct } from '../../services/storageService';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Search from 'antd/es/input/Search';\r\nfunction Storage() {\r\n  const navigate = useNavigate();\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [dataSuplier, setDataSuplier] = useState(null);\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const getData = useCallback(() => {\r\n    //setLoading(true);\r\n    getListStorage()\r\n      .then((res) => {\r\n        //const listAsssignmentId = res.data.assignmentIdReq;\r\n        //setList(listAsssignmentId);\r\n        const convertedData = res.data.map((data) => {\r\n          const {\r\n            productId,\r\n            productName,\r\n            quantity,\r\n            unitName,\r\n          } = data;\r\n\r\n          return {\r\n            key: productId,\r\n            productId,\r\n            productName,\r\n            quantity,\r\n            unitName,\r\n          };\r\n        });\r\n        // Filter the data based on the search query\r\n        const filteredData = convertedData.filter((data) =>\r\n          data.productName.toLowerCase().includes(searchQuery.toLowerCase())\r\n        );\r\n\r\n        setDataSource(filteredData);\r\n        //setTotalElements(res.data.totalElements);\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.message);\r\n\r\n      });\r\n\r\n    //setLoading(false);\r\n  }, [searchQuery]);\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n  const [open, setOpen] = useState(false);\r\n  const showDrawer = (record) => {\r\n    getSupllierStorage(record.productId).then((res) => {\r\n      const supplierData = res.data; // Assuming res.data is an object containing supplier data\r\n      setDataSuplier(supplierData);\r\n      console.log(dataSuplier)\r\n      setOpen(true);\r\n    })\r\n      .catch((error) => {\r\n        message.error(error.message);\r\n      });\r\n\r\n\r\n  };\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      dataIndex: 'productId',\r\n      key: dataSource.productId,\r\n      // render: () => displayIdCounter++,\r\n      render: (_, record, index) => (currentPage - 1) * 5 + index + 1,\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Product Name',\r\n      dataIndex: 'productName',\r\n      key: dataSource.productName,\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Quantity',\r\n      dataIndex: 'quantity',\r\n      key: dataSource.quantity,\r\n      sorter: {\r\n        compare: (a, b) => a.quantity - b.quantity,\r\n        multiple: 2,\r\n      },\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Unit',\r\n      dataIndex: 'unitName',\r\n      key: dataSource.unitName,\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      width: '200px',\r\n      render: (_, record) => (\r\n        <span>\r\n          <Button\r\n            onClick={() => {\r\n              navigate(`/storage/editProduct/${record.productId}`)\r\n            }} >\r\n            <EditOutlined />\r\n          </Button>\r\n\r\n\r\n          <Button style={{ marginLeft: '10px' }} danger onClick={() => showModalDelete(record.productId)}>\r\n            <DeleteOutlined />\r\n          </Button>\r\n\r\n\r\n        </span>\r\n\r\n      ),\r\n\r\n\r\n    },\r\n  ];\r\n\r\n  const onChangeTable = (pagination, filters, sorter, extra) => {\r\n    console.log('params', pagination, filters, sorter, extra);\r\n    setCurrentPage(pagination.current);\r\n  };\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const paginationConfig = {\r\n    current: currentPage, // Current page number\r\n    pageSize: 5,   // Number of items per page\r\n    total: dataSource.length, // Total number of items in the data source\r\n    // Other pagination properties like showTotal, showSizeChanger, etc.\r\n  };\r\n\r\n\r\n  //delete\r\n  const [isModalDelete, setIsModalDelete] = useState(false);\r\n  const [productDelete, setProductDelete] = useState(undefined);\r\n  const handleOkDelete = () => {\r\n    deleteProduct(productDelete)\r\n      .then((res) => {\r\n        message.success('Product is deleted successfully');\r\n        setIsModalDelete(false);\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setIsModalDelete(false);\r\n  };\r\n\r\n  const showModalDelete = (id) => {\r\n    setProductDelete(id);\r\n    setIsModalDelete(true);\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ margin: '0px 10px' }}>\r\n\r\n        <Space>\r\n          <Input\r\n            placeholder=\"Search by product name\"\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            value={searchQuery}\r\n          />\r\n        </Space>\r\n        <Button style={{ float: 'right', marginBottom: '15px' }} type=\"primary\" icon={<PlusOutlined />}\r\n          onClick={() => navigate(`/storage/addProduct`)}\r\n        >\r\n          Add Product\r\n        </Button>\r\n\r\n        {dataSuplier && (\r\n\r\n          <div>\r\n            <Drawer title={\"Suplier of \" + dataSuplier.productName} placement=\"right\" onClose={onClose} open={open}>\r\n              <p>Supplier Name: {dataSuplier.displayName}</p>\r\n              <p>Address: {dataSuplier.address}</p>\r\n              <p>Phone: {dataSuplier.phone}</p>\r\n              <p>Email: {dataSuplier.email}</p>\r\n              <p>More Info: {dataSuplier.moreInfo}</p>\r\n              <p>Contract Date: {new Date(dataSuplier.contractDate).toLocaleDateString()}</p>\r\n            </Drawer>\r\n          </div>\r\n        )}\r\n\r\n\r\n        <Table columns={columns} dataSource={dataSource} onChange={onChangeTable} pagination={paginationConfig} />\r\n\r\n      </div>\r\n\r\n      <Modal\r\n        title='Are you sure?'\r\n        open={isModalDelete}\r\n        onOk={handleOkDelete}\r\n        onCancel={handleCancelDelete}\r\n        footer={null}\r\n      >\r\n        <p>Do you want to delete this product?</p>\r\n        <Button\r\n          type=\"primary\"\r\n          key='back'\r\n          onClick={handleOkDelete}\r\n        >\r\n          Delete\r\n        </Button>\r\n\r\n        <Button\r\n          className='button-modal'\r\n          key='submit'\r\n          style={{ marginLeft: '10px' }}\r\n          type='default' // Set the type to \"default\" or \"primary\" or \"ghost\"\r\n          onClick={handleCancelDelete}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Storage;\r\n","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Storage\\AddProduct.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Login\\Login.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Storage\\EditProduct.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\components\\Layout\\Layout.jsx",["180","181","182","183","184","185","186","187","188"],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\supplierService.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\unitService.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\authService.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\storageService.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\httpCommon.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\constants\\configUrl.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\InputStorage\\InputStorage.jsx",["189"],[],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Drawer, Modal, Table, message, Button, Space, DatePicker } from 'antd';\r\nimport { deleteInputStorage, getListInputStorage, getListInputStorageById } from '../../services/inputStorageService';\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n} from '@ant-design/icons';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Search from 'antd/es/input/Search';\r\nimport Input from 'antd/es/input/Input';\r\nfunction InputStorage() {\r\n  const navigate = useNavigate();\r\n  const [dataSource, setDataSource] = useState([])\r\n  const [dataInput, setInputStorage] = useState([])\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [dateFilter, setDateFilter] = useState(null);\r\n\r\n  const getData = useCallback(() => {\r\n    getListInputStorage()\r\n      .then((res) => {\r\n\r\n        const convertedData = res.data.map((data) => {\r\n          const {\r\n            InputId,\r\n            ProductId,\r\n            Quantity,\r\n            DateInput,\r\n            InputPrice,\r\n            OutputPrice,\r\n            Product,\r\n          } = data;\r\n          return {\r\n            key: InputId,\r\n            ProductId,\r\n            InputId,\r\n            ProductName: `${Product.ProductName}`,\r\n            Quantity,\r\n            DateInput: `${new Date(DateInput).toISOString().split('T')[0]}`,\r\n            InputPrice,\r\n            OutputPrice\r\n          }\r\n        });\r\n        // Filter the data based on the search query\r\n        const filteredData = convertedData.filter((data) => {\r\n          const isMatchingProduct = data.ProductName.toLowerCase().includes(searchQuery.toLowerCase());\r\n          \r\n          const isMatchingDate = !dateFilter || new Date(data.DateInput).toISOString().split('T')[0] === dateFilter;\r\n\r\n          return isMatchingProduct && isMatchingDate;\r\n        });\r\n  \r\n       \r\n        setDataSource(filteredData);\r\n\r\n\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.message);\r\n\r\n      });\r\n\r\n    //setLoading(false);\r\n  }, [searchQuery,dateFilter]);\r\n  useEffect(() => {\r\n    getData();\r\n\r\n  }, [getData]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const showDrawer = (record) => {\r\n    getListInputStorageById(record.InputId).then((res) => {\r\n      const InputData = res.data[0]; // Assuming res.data is an object containing supplier data\r\n      setInputStorage(InputData);\r\n      setOpen(true);\r\n    })\r\n      .catch((error) => {\r\n        message.error(error.message);\r\n      });\r\n\r\n\r\n  };\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      dataIndex: 'InputId',\r\n      key: dataSource.InputId,\r\n      render: (_, record, index) => (currentPage - 1) * 5 + index + 1,\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Product Name',\r\n      dataIndex: 'ProductName',\r\n      key: 'ProductName',\r\n      sorter: (a, b) => a.ProductName.localeCompare(b.ProductName),\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n\r\n    {\r\n      title: 'Quantity',\r\n      dataIndex: 'Quantity',\r\n      key: 'Quantity',\r\n      sorter: {\r\n        compare: (a, b) => a.Quantity - b.Quantity,\r\n        multiple: 2,\r\n      },\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Input Date',\r\n      dataIndex: 'DateInput',\r\n      key: 'DateInput',\r\n      sorter: (a, b) => new Date(a.DateInput) - new Date(b.DateInput),\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      width: '200px',\r\n      render: (_, record) => (\r\n        <span>\r\n          <Button\r\n            onClick={() => {\r\n              navigate(`/inputStorage/edit/${record.InputId}`)\r\n            }} >\r\n            <EditOutlined />\r\n          </Button>\r\n\r\n\r\n          <Button danger style={{ marginLeft: '10px' }} onClick={() => showModalDelete(record.InputId)}>\r\n            <DeleteOutlined />\r\n          </Button>\r\n\r\n\r\n        </span>\r\n\r\n      ),\r\n\r\n\r\n    },\r\n  ];\r\n\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const paginationConfig = {\r\n    current: currentPage, // Current page number\r\n    pageSize: 5,   // Number of items per page\r\n    total: dataSource.length, // Total number of items in the data source\r\n    // Other pagination properties like showTotal, showSizeChanger, etc.\r\n  };\r\n  const onChange = (pagination, filters, sorter, extra) => {\r\n    setCurrentPage(pagination.current);\r\n  };\r\n\r\n  //delete\r\n  const [isModalDelete, setIsModalDelete] = useState(false);\r\n  const [inputStorageDelete, setInputStorageDelete] = useState(undefined);\r\n  const handleOkDelete = () => {\r\n    deleteInputStorage(inputStorageDelete)\r\n      .then((res) => {\r\n        message.success('Input is deleted successfully');\r\n        setIsModalDelete(false);\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setIsModalDelete(false);\r\n  };\r\n\r\n  const showModalDelete = (id) => {\r\n    setInputStorageDelete(id);\r\n    setIsModalDelete(true);\r\n  };\r\n  return (\r\n\r\n    <>\r\n\r\n<Space  style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center',marginBottom:'15px' }}>\r\n  <DatePicker onChange={(date, dateString) => setDateFilter(dateString)} />\r\n\r\n  <Space>\r\n    <Input\r\n      placeholder=\"Search by product name\"\r\n      onChange={(e) => {\r\n        setSearchQuery(e.target.value);\r\n      }}\r\n      value={searchQuery}\r\n    />\r\n\r\n    <Button\r\n      type=\"primary\"\r\n\r\n      onClick={() => navigate(`/inputStorage/add`)}\r\n    >\r\n      Create new Input Storage\r\n    </Button>\r\n  </Space>\r\n</Space>\r\n\r\n      {dataInput && (\r\n\r\n        <div>\r\n          <Drawer title={\"Details \"} placement=\"right\" onClose={onClose} open={open}>\r\n            <p>Product Name: {dataInput.Product?.ProductName}</p>\r\n            <p>Quantity: {dataInput.Quantity}</p>\r\n            <p>Unit: {dataInput.Product?.Unit?.UnitName}</p>\r\n            <p>Input Date: {new Date(dataInput.DateInput).toLocaleDateString()}</p>\r\n            <p>Input Price: {dataInput.InputPrice}</p>\r\n            <p>Output Price: {dataInput.OutputPrice}</p>\r\n            <p>Supplier: {dataInput.Product?.Supplier?.DisplayName}</p>\r\n            <ul>\r\n              <li>Address: {dataInput.Product?.Supplier?.Address}</li>\r\n              <li>Phone: {dataInput.Product?.Supplier?.Phone}</li>\r\n              <li>Email: {dataInput.Product?.Supplier?.Email}</li>\r\n              <li>More Infomation: {dataInput.Product?.Supplier?.MoreInfo}</li>\r\n              <li>Contract Date:{new Date(dataInput.Product?.Supplier?.ContractDate).toLocaleDateString()} </li>\r\n            </ul>\r\n          </Drawer>\r\n        </div>\r\n      )}\r\n      <Table columns={columns} dataSource={dataSource} onChange={onChange} pagination={paginationConfig} />\r\n\r\n      <Modal\r\n        title='Are you sure?'\r\n        open={isModalDelete}\r\n        onOk={handleOkDelete}\r\n        onCancel={handleCancelDelete}\r\n        footer={null}\r\n      >\r\n        <p>Do you want to delete this Input Storage?</p>\r\n        <Button\r\n          type=\"primary\"\r\n          key='back'\r\n          onClick={handleOkDelete}\r\n        >\r\n          Delete\r\n        </Button>\r\n\r\n        <Button\r\n          className='button-modal'\r\n          key='submit'\r\n          style={{ marginLeft: '10px' }}\r\n          type='default' // Set the type to \"default\" or \"primary\" or \"ghost\"\r\n          onClick={handleCancelDelete}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Modal>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default InputStorage","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Customer\\CustomerIndex.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\customerService.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Customer\\EditCustomer.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Customer\\AddCustomer.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\inputStorageService.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\OutputStorage\\OutputStorage.jsx",["190","191"],[],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Drawer, Modal, Table, message, Button, Space, Input, DatePicker, Select, Typography } from 'antd';\r\nimport { deleteOutputStorage, getListOutputStorage, getListOutputStorageById } from '../../services/outputStorage';\r\nimport { getListCustomer } from '../../services/customerService';\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n} from '@ant-design/icons';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Option } from 'antd/es/mentions';\r\nfunction OutputStorage() {\r\n  const navigate = useNavigate();\r\n  const [dataSource, setDataSource] = useState([])\r\n  const [dataCustomer, setdataCustomer] = useState([])\r\n  const [dataInput, setInputStorage] = useState([])\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [dateFilter, setDateFilter] = useState(null);\r\n  const [customer, setCustomer] = useState(null);\r\n  const getData = useCallback(() => {\r\n    getListOutputStorage()\r\n      .then((res) => {\r\n\r\n        const convertedData = res.data.map((data) => {\r\n          const {\r\n            OutputId,\r\n            ProductId,\r\n            Quantity,\r\n            DateOutput,\r\n            InputPrice,\r\n            OutputPrice,\r\n            Product,\r\n            Customer\r\n          } = data;\r\n          return {\r\n            key: OutputId,\r\n            ProductId,\r\n            OutputId,\r\n            ProductName: `${Product?.ProductName}`,\r\n            CustomerName: `${Customer?.DisplayName}`,\r\n            Quantity,\r\n            DateOutput: `${new Date(DateOutput).toISOString().split('T')[0]}`,\r\n            InputPrice,\r\n            OutputPrice\r\n          }\r\n        });\r\n        const filteredData = convertedData.filter((data) => {\r\n          const isMatchingProduct = data.ProductName.toLowerCase().includes(searchQuery.toLowerCase());\r\n\r\n          const isMatchingDate = !dateFilter || new Date(data.DateOutput).toISOString().split('T')[0] === dateFilter;\r\n          const isSeclt = !customer || data.CustomerName.includes(customer);\r\n          return isMatchingProduct && isMatchingDate & isSeclt;\r\n        });\r\n\r\n        setDataSource(filteredData);\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.message);\r\n\r\n      });\r\n\r\n    //setLoading(false);\r\n  }, [searchQuery, dateFilter, customer]);\r\n  useEffect(() => {\r\n    getData();\r\n\r\n    getListCustomer().then((res) => {\r\n      setdataCustomer(res.data)\r\n      console.log(res.data)\r\n    }).catch((error) => {\r\n      message.error(error.message);\r\n    });\r\n  }, [getData]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const showDrawer = (record) => {\r\n    getListOutputStorageById(record.OutputId).then((res) => {\r\n      const InputData = res.data[0]; // Assuming res.data is an object containing supplier data\r\n      setInputStorage(InputData);\r\n      console.log(InputData)\r\n      setOpen(true);\r\n    })\r\n      .catch((error) => {\r\n        message.error(error.message);\r\n      });\r\n\r\n\r\n  };\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      dataIndex: 'InputId',\r\n      key: dataSource.InputId,\r\n      render: (_, record, index) => (currentPage - 1) * 5 + index + 1,\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Customer Name',\r\n      dataIndex: 'CustomerName',\r\n      key: 'CustomerName',\r\n      sorter: (a, b) => a.CustomerName.localeCompare(b.CustomerName),\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Product Name',\r\n      dataIndex: 'ProductName',\r\n      key: 'ProductName',\r\n      sorter: (a, b) => a.ProductName.localeCompare(b.ProductName),\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n\r\n    {\r\n      title: 'Quantity',\r\n      dataIndex: 'Quantity',\r\n      key: 'Quantity',\r\n      sorter: {\r\n        compare: (a, b) => a.Quantity - b.Quantity,\r\n        multiple: 2,\r\n      },\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Output Date',\r\n      dataIndex: 'DateOutput',\r\n      key: 'DateOutput',\r\n      sorter: (a, b) => new Date(a.DateOutput) - new Date(b.DateOutput),\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      width: '200px',\r\n      render: (_, record) => (\r\n        <span >\r\n          <Button \r\n            onClick={() => {\r\n              navigate(`/outputStorage/edit/${record.OutputId}`)\r\n            }} >\r\n            <EditOutlined />\r\n          </Button>\r\n\r\n\r\n          <Button style={{ marginLeft: '10px' }} danger onClick={() => showModalDelete(record.OutputId)}>\r\n            <DeleteOutlined />\r\n          </Button>\r\n\r\n\r\n        </span>\r\n\r\n      ),\r\n\r\n\r\n    },\r\n  ];\r\n\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const paginationConfig = {\r\n    current: currentPage, // Current page number\r\n    pageSize: 5,   // Number of items per page\r\n    total: dataSource.length, // Total number of items in the data source\r\n    // Other pagination properties like showTotal, showSizeChanger, etc.\r\n  };\r\n  const onChange = (pagination, filters, sorter, extra) => {\r\n    setCurrentPage(pagination.current);\r\n  };\r\n  //delete\r\n  const [isModalDelete, setIsModalDelete] = useState(false);\r\n  const [outputStorageDelete, setOutputStorageDelete] = useState(undefined);\r\n  const handleOkDelete = () => {\r\n    deleteOutputStorage(outputStorageDelete)\r\n      .then((res) => {\r\n        message.success('Output is deleted successfully');\r\n        setIsModalDelete(false);\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setIsModalDelete(false);\r\n  };\r\n\r\n  const showModalDelete = (id) => {\r\n    setOutputStorageDelete(id);\r\n    setIsModalDelete(true);\r\n  };\r\n\r\n  return (\r\n\r\n    <>\r\n      <Space style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '15px' }}>\r\n        <div style={{ width: '400px' }}>\r\n\r\n          <DatePicker onChange={(date, dateString) => setDateFilter(dateString)} style={{ marginRight: '15px' }} />\r\n          <Select\r\n            style={{ width: '200px' }}\r\n            placeholder=\"Select customer name\"\r\n            onChange={(selectedCustomer) => setCustomer(selectedCustomer)}\r\n            optionLabelProp=\"label\"\r\n          >\r\n\r\n            <Select.Option key=\"none\" value={!customer} label=\"None\">\r\n              <Space>\r\n                None\r\n              </Space>\r\n            </Select.Option>\r\n\r\n            {/* Map through dataCustomer and create options */}\r\n            {dataCustomer && dataCustomer.map((u) => (\r\n              <Select.Option key={u.CustomerId} value={u.DisplayName} label={u.DisplayName}>\r\n                <Space>\r\n                  {u.DisplayName}\r\n                </Space>\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n        <Space>\r\n          <Input\r\n            placeholder=\"Search by product name\"\r\n            onChange={(e) => {\r\n              setSearchQuery(e.target.value);\r\n            }}\r\n            value={searchQuery}\r\n          />\r\n\r\n          <Button\r\n            type=\"primary\"\r\n\r\n            onClick={() => navigate(`/outputStorage/add`)}\r\n          >\r\n            Create new Output Storage\r\n          </Button>\r\n        </Space>\r\n      </Space>\r\n\r\n      {dataInput && (\r\n\r\n        <div>\r\n          <Drawer title={\"Details \"} placement=\"right\" onClose={onClose} open={open}>\r\n            <p>Product Name: {dataInput.Product?.ProductName}</p>\r\n            <p>Quantity: {dataInput.Quantity}</p>\r\n            <p>Unit: {dataInput.Product?.Unit?.UnitName}</p>\r\n            <p>Output Date: {new Date(dataInput.DateOutput).toLocaleDateString()}</p>\r\n            <p>Customer: {dataInput.Customer?.DisplayName}</p>\r\n            <ul>\r\n              <li>Address: {dataInput.Customer?.Address}</li>\r\n              <li>Phone: {dataInput.Customer?.Phone}</li>\r\n              <li>Email: {dataInput.Customer?.Email}</li>\r\n              <li>More Infomation: {dataInput.Customer?.MoreInfo}</li>\r\n              <li>Contract Date:{new Date(dataInput.Customer?.ContractDate).toLocaleDateString()} </li>\r\n            </ul>\r\n          </Drawer>\r\n        </div>\r\n      )}\r\n      <Table columns={columns} dataSource={dataSource} onChange={onChange} pagination={paginationConfig} />\r\n\r\n      <Modal\r\n        title='Are you sure?'\r\n        open={isModalDelete}\r\n        onOk={handleOkDelete}\r\n        onCancel={handleCancelDelete}\r\n        footer={null}\r\n      >\r\n        <p>Do you want to delete this Output Storage?</p>\r\n        <Button\r\n          type=\"primary\"\r\n          key='back'\r\n          onClick={handleOkDelete}\r\n        >\r\n          Delete\r\n        </Button>\r\n\r\n        <Button\r\n          className='button-modal'\r\n          key='submit'\r\n          style={{ marginLeft: '10px' }}\r\n          type='default' // Set the type to \"default\" or \"primary\" or \"ghost\"\r\n          onClick={handleCancelDelete}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OutputStorage","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\outputStorage.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\InputStorage\\AddInputStorage.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\InputStorage\\EditInputStorage.jsx",["192"],[],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  message,\r\n  Typography,\r\n  DatePicker\r\n} from 'antd';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { getProduct } from '../../services/storageService';\r\nimport {editInputStorageById, getListInputStorageById } from '../../services/inputStorageService';\r\nimport moment from 'moment';\r\nfunction EditInputStorage() {\r\n  const [form] = Form.useForm();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const id = params.InputId;\r\n  const[dataProduct,setdataProduct] = useState([])\r\n  const[dataInput,setInput] = useState([])\r\n  const onFinish = (values) => {\r\n    const data = {\r\n        InputId:  dataInput.InputId,\r\n      ProductId: values.ProductName,\r\n      Quantity: values.Quantity,\r\n      InputPrice: values.InputPrice,\r\n      OutputPrice: values.OutputPrice,\r\n      DateInput: values.DateInput,\r\n      Status: true,\r\n    };\r\n\r\n    editInputStorageById(data)\r\n    \t.then(() => {\r\n    \t\tmessage.success('Edit Input Storage successfully');\r\n    \t\tnavigate('/inputStorage');\r\n    \t})\r\n    \t.catch((err) => {\r\n    \t\tmessage.error(err.message);\r\n    \t});\r\n  };\r\n  useEffect(() => {\r\n\r\n    getListInputStorageById(id)\r\n    .then((res) => {\r\n      setInput(res.data[0])\r\n    })\r\n    .catch((err) => {\r\n      message.error(err.message);\r\n    });\r\n    getProduct()\r\n      .then((res) => {\r\n        setdataProduct(res.data)\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n\r\n      \r\n\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className='container-fluid' style={{ display: 'contents' }}>\r\n\r\n        <Form\r\n          form={form}\r\n          labelCol={{\r\n            span: 6,\r\n          }}\r\n          wrapperCol={{\r\n            span: 10,\r\n          }}\r\n          layout=\"horizontal\"\r\n          onFinish={onFinish}\r\n\r\n          colon={false}\r\n\r\n          style={{\r\n            maxWidth: 900,\r\n            margin: '50px 350px'\r\n          }}\r\n          fields={[\r\n            {\r\n              name: 'ProductName',\r\n              value: dataInput?.Product?.ProductName,\r\n            \r\n            },\r\n            {\r\n              name: 'Quantity',\r\n              value: dataInput?.Quantity,\r\n            },\r\n            {\r\n              name: 'InputPrice',\r\n              value: dataInput?.InputPrice,\r\n            },\r\n            {\r\n              name: 'OutputPrice',\r\n              value: dataInput?.OutputPrice,\r\n            },\r\n            {\r\n              name: 'DateInput',\r\n              value: moment(dataInput?.DateInput),\r\n            },\r\n          ]}\r\n        >\r\n\r\n\r\n          <Form.Item \r\n          name=\"ProductName\" \r\n          label=\"Product\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Product Name is required',\r\n            },\r\n          ]}\r\n          >\r\n            <Select >\r\n              {dataProduct &&\r\n                dataProduct.map((u) => (\r\n                  <Select.Option key={u.ProductId} value={u.ProductId}>\r\n                    <Typography.Text>\r\n                      {u.ProductName}\r\n                    </Typography.Text>\r\n                  </Select.Option>\r\n                ))}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"Quantity\"\r\n            label=\"Quantity\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Quantity is required',\r\n              },\r\n            ]}\r\n          \r\n          >\r\n           <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"InputPrice\"\r\n            label=\"InputPrice\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Input Price is required',\r\n              },\r\n            ]}\r\n          >\r\n              <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"OutputPrice\"\r\n            label=\"OutputPrice\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Output Price is required',\r\n              },\r\n            ]}\r\n          >\r\n              <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"DateInput\"\r\n            label=\"Date Input\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Date Input date is required',\r\n              },\r\n            ]}\r\n          >\r\n             <DatePicker\r\n\t\t\t\t\t\tinputReadOnly={true}\r\n\t\t\t\t\t\tformat='YYYY-MM-DD'\r\n\t\t\t\t\t/>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\" \">\r\n            <Button type=\"primary\"\r\n             htmlType=\"submit\"\r\n         \r\n            >\r\n              Submit\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={() => navigate('/inputStorage')}\r\n              style={{ marginLeft: '5px' }}>\r\n              Cancel\r\n            </Button>\r\n          </Form.Item>\r\n\r\n        </Form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditInputStorage","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\OutputStorage\\AddOutputStorage.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\OutputStorage\\EditOutputProduct.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\DashBoard\\DashBoard.jsx",["193","194","195"],[],"import React, { useEffect } from 'react'\r\nimport { useState } from \"react\";\r\n\r\nimport {\r\n    Card,\r\n    Col,\r\n    Row,\r\n    Typography,\r\n    Avatar,\r\n    List,\r\n    message,\r\n} from \"antd\";\r\nimport {\r\n    ExclamationOutlined,\r\n    PlusOutlined,\r\n    MinusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { getListInputStorageTransaction } from '../../services/inputStorageService';\r\nimport { getListOutputStorageTransaction } from '../../services/outputStorage';\r\nfunction DashBoard() {\r\n    const { Title, Text } = Typography;\r\n\r\n    const [dataTransaction, setdataTransaction] = useState([])\r\n    const [dataTransactionOutput, setdataTransactionOutput] = useState([])\r\n    const totalSumOutput = dataTransactionOutput.map(item => item.priceOutputTransaction).reduce((acc, price) => acc + price, 0);\r\n    const totalSumInput = dataTransaction.map(item => item.priceTransaction).reduce((acc, price) => acc + price, 0);\r\n    useEffect(() => {\r\n\r\n\r\n        getListInputStorageTransaction()\r\n            .then((res) => {\r\n                setdataTransaction(res.data)\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            });\r\n        getListOutputStorageTransaction()\r\n            .then((res) => {\r\n                setdataTransactionOutput(res.data)\r\n                console.log(res.data)\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            });\r\n\r\n\r\n\r\n    }, []);\r\n\r\n    const count = [\r\n        {\r\n            today: \"Today’s Sales\",\r\n            title: \"$53,000\",\r\n            persent: \"+30%\",\r\n\r\n            bnb: \"bnb2\",\r\n        },\r\n        {\r\n            today: \"Today’s Users\",\r\n            title: \"3,200\",\r\n            persent: \"+20%\",\r\n\r\n            bnb: \"bnb2\",\r\n        },\r\n        {\r\n            today: \"Total Input Transactions\",\r\n            title: \"$\"+ totalSumInput,\r\n            persent: \"+30%\",\r\n            icon:<MinusOutlined />,\r\n            bnb: \"bnb2\",\r\n        },\r\n        {\r\n            today: \"Total Output Transactions\",\r\n            title: \"$\"+totalSumOutput,\r\n            persent: \"+20%\",\r\n            icon:<PlusOutlined />,\r\n            bnb: \"bnb2\",\r\n        },\r\n\r\n    ];\r\n    const timelineList = [\r\n        {\r\n            title: \"$2,400 - Redesign store\",\r\n            time: \"09 JUN 7:20 PM\",\r\n            color: \"green\",\r\n        },\r\n        {\r\n            title: \"New order #3654323\",\r\n            time: \"08 JUN 12:20 PM\",\r\n            color: \"green\",\r\n        },\r\n\r\n    ];\r\n    //billing\r\n    const calender = [\r\n        <svg\r\n            width=\"18\"\r\n            height=\"18\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            key={0}\r\n        >\r\n            <path\r\n                fillRule=\"evenodd\"\r\n                clipRule=\"evenodd\"\r\n                d=\"M6 2C5.44772 2 5 2.44772 5 3V4H4C2.89543 4 2 4.89543 2 6V16C2 17.1046 2.89543 18 4 18H16C17.1046 18 18 17.1046 18 16V6C18 4.89543 17.1046 4 16 4H15V3C15 2.44772 14.5523 2 14 2C13.4477 2 13 2.44772 13 3V4H7V3C7 2.44772 6.55228 2 6 2ZM6 7C5.44772 7 5 7.44772 5 8C5 8.55228 5.44772 9 6 9H14C14.5523 9 15 8.55228 15 8C15 7.44772 14.5523 7 14 7H6Z\"\r\n                fill=\"#111827\"\r\n                className=\"fill-muted\"\r\n            ></path>\r\n        </svg>,\r\n    ];\r\n    const mins = [\r\n        <svg\r\n            width=\"10\"\r\n            height=\"10\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            key={0}\r\n        >\r\n            <path\r\n                fillRule=\"evenodd\"\r\n                clipRule=\"evenodd\"\r\n                d=\"M5 10C5 9.44772 5.44772 9 6 9L14 9C14.5523 9 15 9.44772 15 10C15 10.5523 14.5523 11 14 11L6 11C5.44772 11 5 10.5523 5 10Z\"\r\n                className=\"fill-danger\"\r\n            ></path>\r\n        </svg>,\r\n    ];\r\n\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"layout-content\" style={{ maxHeight: '100vh', overflow: 'auto' }}>\r\n\r\n                <Row gutter={[24, 0]}>\r\n                    <Col xs={24} sm={24} md={12} lg={12} xl={12} className=\"mb-24\">\r\n                        <Row gutter={[24, 0]}>\r\n\r\n                            <Row className=\"rowgap-vbox\" gutter={[24, 0]}>\r\n                                {count.map((c, index) => (\r\n                                    <Col\r\n                                        style={{ marginBottom: '15px' } }\r\n                                    >\r\n                                        <Card bordered={false} className=\"criclebox \">\r\n                                            <div className=\"number\">\r\n                                                <Row align=\"middle\" gutter={[24, 0]}>\r\n                                                    <Col xs={18}>\r\n                                                        <span>{c.today}</span>\r\n                                                        <Title level={3}>\r\n                                                            {c.title} <small className={c.bnb}>{c.persent}</small>\r\n                                                        </Title>\r\n                                                    </Col>\r\n                                                    <Col xs={6}>\r\n                                                        <div className=\"icon-box\">{c.icon}</div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        </Card>\r\n                                    </Col>\r\n                                ))}\r\n\r\n                            </Row>\r\n                        </Row>\r\n\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={12} lg={12} xl={12} className=\"mb-24\">\r\n                        <Card\r\n                            bordered={false}\r\n                            bodyStyle={{ paddingTop: 0 }}\r\n                            className=\"header-solid h-full  ant-list-yes transactions-card\"\r\n                            title={<h6 className=\"font-semibold m-0\">Your Transactions</h6>}\r\n                            extra={\r\n                                <p className=\"card-header-date \">\r\n                                    {calender}\r\n                                    <span>23 - 30 August 2023</span>\r\n                                </p>\r\n                            }\r\n                            style={{ height: '500px', overflow: 'auto' }}\r\n                        >\r\n                            <List\r\n                                header={<h6>Output</h6>}\r\n                                className=\"transactions-list ant-newest\"\r\n                                itemLayout=\"horizontal\"\r\n                                dataSource={dataTransactionOutput}\r\n                                renderItem={(item) => {\r\n                                    const dateOutput = new Date(item.dateOutput);\r\n                                    const formattedDate = `${dateOutput.getDate()} ${new Intl.DateTimeFormat('en-US', { month: 'long' }).format(dateOutput)} ${dateOutput.getFullYear()}, at ${dateOutput.toLocaleTimeString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })}`;\r\n\r\n                                    return (\r\n                                        <List.Item>\r\n                                            <List.Item.Meta\r\n                                                avatar={\r\n                                                    <Avatar size=\"small\" className=\"text-fill\">\r\n                                                        <PlusOutlined style={{ fontSize: 10 }} />\r\n                                                    </Avatar>\r\n                                                }\r\n                                                title={item.product?.productName}\r\n                                                description={formattedDate}\r\n                                            />\r\n                                            <div className=\"amount\">\r\n                                                <span className=\"text-success\">- ${item.priceOutputTransaction}</span>\r\n                                            </div>\r\n                                        </List.Item>\r\n                                    );\r\n                                }}\r\n                            />\r\n\r\n                            <List\r\n                                className=\"yestday transactions-list\"\r\n                                header={<h6>Input</h6>}\r\n                                itemLayout=\"horizontal\"\r\n                                dataSource={dataTransaction}\r\n                                renderItem={(item) => {\r\n                                    const dateInput = new Date(item.dateInput);\r\n                                    const formattedDate = `${dateInput.getDate()} ${new Intl.DateTimeFormat('en-US', { month: 'long' }).format(dateInput)} ${dateInput.getFullYear()}, at ${dateInput.toLocaleTimeString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })}`;\r\n\r\n                                    return (\r\n                                        <List.Item>\r\n                                            <List.Item.Meta\r\n                                                avatar={\r\n                                                    <Avatar size=\"small\" className='text-light-danger'>\r\n                                                        {mins}\r\n                                                    </Avatar>\r\n                                                }\r\n                                                title={item.product?.productName}\r\n                                                description={formattedDate}\r\n                                            />\r\n                                            <div className=\"amount\">\r\n                                                <span className=\"text-danger\">- ${item.priceTransaction}</span>\r\n                                            </div>\r\n                                        </List.Item>\r\n                                    );\r\n                                }}\r\n                            />\r\n\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashBoard","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\Guard\\AdminGuard.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Login\\LogOutConfirm.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\components\\Header\\Header.jsx",["196","197","198","199","200","201"],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\NotFound\\NotFound.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\NotFound\\Unthorized.jsx",[],[],{"ruleId":"202","severity":1,"message":"203","line":10,"column":8,"nodeType":"204","messageId":"205","endLine":10,"endColumn":17},{"ruleId":"202","severity":1,"message":"206","line":10,"column":8,"nodeType":"204","messageId":"205","endLine":10,"endColumn":14},{"ruleId":"202","severity":1,"message":"207","line":2,"column":53,"nodeType":"204","messageId":"205","endLine":2,"endColumn":59},{"ruleId":"202","severity":1,"message":"208","line":2,"column":61,"nodeType":"204","messageId":"205","endLine":2,"endColumn":66},{"ruleId":"202","severity":1,"message":"209","line":6,"column":2,"nodeType":"204","messageId":"205","endLine":6,"endColumn":19},{"ruleId":"202","severity":1,"message":"210","line":15,"column":8,"nodeType":"204","messageId":"205","endLine":15,"endColumn":21},{"ruleId":"202","severity":1,"message":"211","line":80,"column":9,"nodeType":"204","messageId":"205","endLine":80,"endColumn":24},{"ruleId":"202","severity":1,"message":"212","line":80,"column":26,"nodeType":"204","messageId":"205","endLine":80,"endColumn":44},{"ruleId":"202","severity":1,"message":"213","line":89,"column":8,"nodeType":"204","messageId":"205","endLine":89,"endColumn":20},{"ruleId":"214","severity":1,"message":"215","line":118,"column":6,"nodeType":"216","endLine":118,"endColumn":56},{"ruleId":"217","severity":1,"message":"218","line":144,"column":7,"nodeType":"216","endLine":151,"endColumn":8},{"ruleId":"202","severity":1,"message":"206","line":9,"column":8,"nodeType":"204","messageId":"205","endLine":9,"endColumn":14},{"ruleId":"202","severity":1,"message":"219","line":2,"column":83,"nodeType":"204","messageId":"205","endLine":2,"endColumn":93},{"ruleId":"202","severity":1,"message":"220","line":10,"column":10,"nodeType":"204","messageId":"205","endLine":10,"endColumn":16},{"ruleId":"221","severity":1,"message":"222","line":61,"column":6,"nodeType":"223","endLine":61,"endColumn":8,"suggestions":"224"},{"ruleId":"202","severity":1,"message":"225","line":14,"column":5,"nodeType":"204","messageId":"205","endLine":14,"endColumn":24},{"ruleId":"202","severity":1,"message":"226","line":21,"column":20,"nodeType":"204","messageId":"205","endLine":21,"endColumn":24},{"ruleId":"202","severity":1,"message":"227","line":81,"column":11,"nodeType":"204","messageId":"205","endLine":81,"endColumn":23},{"ruleId":"202","severity":1,"message":"208","line":3,"column":24,"nodeType":"204","messageId":"205","endLine":3,"endColumn":29},{"ruleId":"202","severity":1,"message":"228","line":3,"column":31,"nodeType":"204","messageId":"205","endLine":3,"endColumn":38},{"ruleId":"202","severity":1,"message":"209","line":6,"column":5,"nodeType":"204","messageId":"205","endLine":6,"endColumn":22},{"ruleId":"202","severity":1,"message":"229","line":8,"column":10,"nodeType":"204","messageId":"205","endLine":8,"endColumn":14},{"ruleId":"202","severity":1,"message":"230","line":11,"column":10,"nodeType":"204","messageId":"205","endLine":11,"endColumn":16},{"ruleId":"202","severity":1,"message":"231","line":21,"column":11,"nodeType":"204","messageId":"205","endLine":21,"endColumn":23},"no-unused-vars","'AuthGuard' is defined but never used.","Identifier","unusedVar","'Search' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'CaretDownOutlined' is defined but never used.","'LogOutConfirm' is defined but never used.","'logOutModalOpen' is assigned a value but never used.","'setLogOutModalOpen' is assigned a value but never used.","'handleLogOut' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Typography' is defined but never used.","'Option' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["232"],"'ExclamationOutlined' is defined but never used.","'Text' is assigned a value but never used.","'timelineList' is assigned a value but never used.","'message' is defined but never used.","'Link' is defined but never used.","'logout' is defined but never used.","'UserDropdown' is assigned a value but never used.",{"desc":"233","fix":"234"},"Update the dependencies array to be: [id]",{"range":"235","text":"236"},[1565,1567],"[id]"]