[{"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\index.js":"1","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\App.jsx":"3","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\contexts\\AuthContext.js":"4","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\Guard\\AuthGuard.jsx":"5","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Storage\\Storage.jsx":"6","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Storage\\AddProduct.jsx":"7","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Login\\Login.jsx":"8","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Storage\\EditProduct.jsx":"9","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\components\\Layout\\Layout.jsx":"10","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\supplierService.js":"11","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\unitService.js":"12","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\authService.js":"13","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\storageService.js":"14","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\httpCommon.js":"15","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\constants\\configUrl.js":"16","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\InputStorage\\InputStorage.jsx":"17","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Customer\\CustomerIndex.jsx":"18","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\customerService.js":"19","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Customer\\EditCustomer.jsx":"20","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Customer\\AddCustomer.jsx":"21","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\inputStorageService.js":"22","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\OutputStorage\\OutputStorage.jsx":"23","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\outputStorage.js":"24","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\InputStorage\\AddInputStorage.jsx":"25","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\InputStorage\\EditInputStorage.jsx":"26","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\OutputStorage\\AddOutputStorage.jsx":"27","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\OutputStorage\\EditOutputProduct.jsx":"28","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\DashBoard\\DashBoard.jsx":"29","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\Guard\\AdminGuard.jsx":"30","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Login\\LogOutConfirm.jsx":"31","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\components\\Header\\Header.jsx":"32","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\NotFound\\NotFound.jsx":"33","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\NotFound\\Unthorized.jsx":"34","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Supplier\\Supplier.jsx":"35","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Supplier\\EditSupplier.jsx":"36","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Supplier\\AddSupplier.jsx":"37","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\User\\User.jsx":"38","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\userService.js":"39","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\User\\EditUser.jsx":"40","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\User\\AddUser.jsx":"41"},{"size":802,"mtime":1692868100447,"results":"42","hashOfConfig":"43"},{"size":375,"mtime":1692713981215,"results":"44","hashOfConfig":"43"},{"size":4970,"mtime":1692894711317,"results":"45","hashOfConfig":"43"},{"size":667,"mtime":1692867998704,"results":"46","hashOfConfig":"43"},{"size":491,"mtime":1692871730819,"results":"47","hashOfConfig":"43"},{"size":7041,"mtime":1692864106685,"results":"48","hashOfConfig":"43"},{"size":3804,"mtime":1692886939832,"results":"49","hashOfConfig":"43"},{"size":3992,"mtime":1692891176412,"results":"50","hashOfConfig":"43"},{"size":4177,"mtime":1692713981230,"results":"51","hashOfConfig":"43"},{"size":3952,"mtime":1692890686697,"results":"52","hashOfConfig":"43"},{"size":650,"mtime":1692887958144,"results":"53","hashOfConfig":"43"},{"size":180,"mtime":1692713981215,"results":"54","hashOfConfig":"43"},{"size":351,"mtime":1692864468376,"results":"55","hashOfConfig":"43"},{"size":863,"mtime":1692717004870,"results":"56","hashOfConfig":"43"},{"size":1517,"mtime":1692713981215,"results":"57","hashOfConfig":"43"},{"size":400,"mtime":1692772775949,"results":"58","hashOfConfig":"43"},{"size":7967,"mtime":1692861258801,"results":"59","hashOfConfig":"43"},{"size":8575,"mtime":1692864113139,"results":"60","hashOfConfig":"43"},{"size":656,"mtime":1692713981215,"results":"61","hashOfConfig":"43"},{"size":4960,"mtime":1692713981215,"results":"62","hashOfConfig":"43"},{"size":3619,"mtime":1692860298009,"results":"63","hashOfConfig":"43"},{"size":824,"mtime":1692845841120,"results":"64","hashOfConfig":"43"},{"size":9584,"mtime":1692864092253,"results":"65","hashOfConfig":"43"},{"size":933,"mtime":1692893328281,"results":"66","hashOfConfig":"43"},{"size":3707,"mtime":1692860358841,"results":"67","hashOfConfig":"43"},{"size":5032,"mtime":1692860477724,"results":"68","hashOfConfig":"43"},{"size":4916,"mtime":1692860476206,"results":"69","hashOfConfig":"43"},{"size":7108,"mtime":1692860446820,"results":"70","hashOfConfig":"43"},{"size":10449,"mtime":1692893922151,"results":"71","hashOfConfig":"43"},{"size":691,"mtime":1692871094181,"results":"72","hashOfConfig":"43"},{"size":1001,"mtime":1692871150749,"results":"73","hashOfConfig":"43"},{"size":1955,"mtime":1692870726064,"results":"74","hashOfConfig":"43"},{"size":305,"mtime":1692879488556,"results":"75","hashOfConfig":"43"},{"size":316,"mtime":1692879485601,"results":"76","hashOfConfig":"43"},{"size":7459,"mtime":1692894524185,"results":"77","hashOfConfig":"43"},{"size":4784,"mtime":1692887771204,"results":"78","hashOfConfig":"43"},{"size":3844,"mtime":1692894018337,"results":"79","hashOfConfig":"43"},{"size":7508,"mtime":1692894487413,"results":"80","hashOfConfig":"43"},{"size":586,"mtime":1692890561844,"results":"81","hashOfConfig":"43"},{"size":5634,"mtime":1692890504515,"results":"82","hashOfConfig":"43"},{"size":4612,"mtime":1692894068620,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"3ly2u1",{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"87"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"87"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"87"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"87"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"87"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\App.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\contexts\\AuthContext.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\Guard\\AuthGuard.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Storage\\Storage.jsx",["213"],[],"import React, { useCallback, useState, useEffect } from 'react';\r\nimport { Drawer, Modal, Table, message, Button, Space, Input } from 'antd';\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\nimport { getListStorage, getSupllierStorage, deleteProduct } from '../../services/storageService';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Search from 'antd/es/input/Search';\r\nfunction Storage() {\r\n  const navigate = useNavigate();\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [dataSuplier, setDataSuplier] = useState(null);\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const getData = useCallback(() => {\r\n    //setLoading(true);\r\n    getListStorage()\r\n      .then((res) => {\r\n        //const listAsssignmentId = res.data.assignmentIdReq;\r\n        //setList(listAsssignmentId);\r\n        const convertedData = res.data.map((data) => {\r\n          const {\r\n            productId,\r\n            productName,\r\n            quantity,\r\n            unitName,\r\n          } = data;\r\n\r\n          return {\r\n            key: productId,\r\n            productId,\r\n            productName,\r\n            quantity,\r\n            unitName,\r\n          };\r\n        });\r\n        // Filter the data based on the search query\r\n        const filteredData = convertedData.filter((data) =>\r\n          data.productName.toLowerCase().includes(searchQuery.toLowerCase())\r\n        );\r\n\r\n        setDataSource(filteredData);\r\n        //setTotalElements(res.data.totalElements);\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.message);\r\n\r\n      });\r\n\r\n    //setLoading(false);\r\n  }, [searchQuery]);\r\n  useEffect(() => {\r\n    getData();\r\n  }, [getData]);\r\n  const [open, setOpen] = useState(false);\r\n  const showDrawer = (record) => {\r\n    getSupllierStorage(record.productId).then((res) => {\r\n      const supplierData = res.data; // Assuming res.data is an object containing supplier data\r\n      setDataSuplier(supplierData);\r\n      console.log(dataSuplier)\r\n      setOpen(true);\r\n    })\r\n      .catch((error) => {\r\n        message.error(error.message);\r\n      });\r\n\r\n\r\n  };\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      dataIndex: 'productId',\r\n      key: dataSource.productId,\r\n      // render: () => displayIdCounter++,\r\n      render: (_, record, index) => (currentPage - 1) * 5 + index + 1,\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Product Name',\r\n      dataIndex: 'productName',\r\n      key: dataSource.productName,\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Quantity',\r\n      dataIndex: 'quantity',\r\n      key: dataSource.quantity,\r\n      sorter: {\r\n        compare: (a, b) => a.quantity - b.quantity,\r\n        multiple: 2,\r\n      },\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Unit',\r\n      dataIndex: 'unitName',\r\n      key: dataSource.unitName,\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      width: '200px',\r\n      render: (_, record) => (\r\n        <span>\r\n          <Button\r\n            onClick={() => {\r\n              navigate(`/storage/editProduct/${record.productId}`)\r\n            }} >\r\n            <EditOutlined />\r\n          </Button>\r\n\r\n\r\n          <Button style={{ marginLeft: '10px' }} danger onClick={() => showModalDelete(record.productId)}>\r\n            <DeleteOutlined />\r\n          </Button>\r\n\r\n\r\n        </span>\r\n\r\n      ),\r\n\r\n\r\n    },\r\n  ];\r\n\r\n  const onChangeTable = (pagination, filters, sorter, extra) => {\r\n    console.log('params', pagination, filters, sorter, extra);\r\n    setCurrentPage(pagination.current);\r\n  };\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const paginationConfig = {\r\n    current: currentPage, // Current page number\r\n    pageSize: 5,   // Number of items per page\r\n    total: dataSource.length, // Total number of items in the data source\r\n    // Other pagination properties like showTotal, showSizeChanger, etc.\r\n  };\r\n\r\n\r\n  //delete\r\n  const [isModalDelete, setIsModalDelete] = useState(false);\r\n  const [productDelete, setProductDelete] = useState(undefined);\r\n  const handleOkDelete = () => {\r\n    deleteProduct(productDelete)\r\n      .then((res) => {\r\n        message.success('Product is deleted successfully');\r\n        setIsModalDelete(false);\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setIsModalDelete(false);\r\n  };\r\n\r\n  const showModalDelete = (id) => {\r\n    setProductDelete(id);\r\n    setIsModalDelete(true);\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ margin: '0px 10px' }}>\r\n\r\n        <Space>\r\n          <Input\r\n            placeholder=\"Search by product name\"\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            value={searchQuery}\r\n          />\r\n        </Space>\r\n        <Button style={{ float: 'right', marginBottom: '15px' }} type=\"primary\" icon={<PlusOutlined />}\r\n          onClick={() => navigate(`/storage/addProduct`)}\r\n        >\r\n          Add Product\r\n        </Button>\r\n\r\n        {dataSuplier && (\r\n\r\n          <div>\r\n            <Drawer title={\"Suplier of \" + dataSuplier.productName} placement=\"right\" onClose={onClose} open={open}>\r\n              <p>Supplier Name: {dataSuplier.displayName}</p>\r\n              <p>Address: {dataSuplier.address}</p>\r\n              <p>Phone: {dataSuplier.phone}</p>\r\n              <p>Email: {dataSuplier.email}</p>\r\n              <p>More Info: {dataSuplier.moreInfo}</p>\r\n              <p>Contract Date: {new Date(dataSuplier.contractDate).toLocaleDateString()}</p>\r\n            </Drawer>\r\n          </div>\r\n        )}\r\n\r\n\r\n        <Table columns={columns} dataSource={dataSource} onChange={onChangeTable} pagination={paginationConfig} />\r\n\r\n      </div>\r\n\r\n      <Modal\r\n        title='Are you sure?'\r\n        open={isModalDelete}\r\n        onOk={handleOkDelete}\r\n        onCancel={handleCancelDelete}\r\n        footer={null}\r\n      >\r\n        <p>Do you want to delete this product?</p>\r\n        <Button\r\n          type=\"primary\"\r\n          key='back'\r\n          onClick={handleOkDelete}\r\n        >\r\n          Delete\r\n        </Button>\r\n\r\n        <Button\r\n          className='button-modal'\r\n          key='submit'\r\n          style={{ marginLeft: '10px' }}\r\n          type='default' // Set the type to \"default\" or \"primary\" or \"ghost\"\r\n          onClick={handleCancelDelete}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Storage;\r\n","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Storage\\AddProduct.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Login\\Login.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Storage\\EditProduct.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\components\\Layout\\Layout.jsx",["214","215","216","217","218","219","220","221"],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\supplierService.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\unitService.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\authService.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\storageService.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\httpCommon.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\constants\\configUrl.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\InputStorage\\InputStorage.jsx",["222"],[],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Drawer, Modal, Table, message, Button, Space, DatePicker } from 'antd';\r\nimport { deleteInputStorage, getListInputStorage, getListInputStorageById } from '../../services/inputStorageService';\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n} from '@ant-design/icons';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Search from 'antd/es/input/Search';\r\nimport Input from 'antd/es/input/Input';\r\nfunction InputStorage() {\r\n  const navigate = useNavigate();\r\n  const [dataSource, setDataSource] = useState([])\r\n  const [dataInput, setInputStorage] = useState([])\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [dateFilter, setDateFilter] = useState(null);\r\n\r\n  const getData = useCallback(() => {\r\n    getListInputStorage()\r\n      .then((res) => {\r\n\r\n        const convertedData = res.data.map((data) => {\r\n          const {\r\n            InputId,\r\n            ProductId,\r\n            Quantity,\r\n            DateInput,\r\n            InputPrice,\r\n            OutputPrice,\r\n            Product,\r\n          } = data;\r\n          return {\r\n            key: InputId,\r\n            ProductId,\r\n            InputId,\r\n            ProductName: `${Product.ProductName}`,\r\n            Quantity,\r\n            DateInput: `${new Date(DateInput).toISOString().split('T')[0]}`,\r\n            InputPrice,\r\n            OutputPrice\r\n          }\r\n        });\r\n        // Filter the data based on the search query\r\n        const filteredData = convertedData.filter((data) => {\r\n          const isMatchingProduct = data.ProductName.toLowerCase().includes(searchQuery.toLowerCase());\r\n          \r\n          const isMatchingDate = !dateFilter || new Date(data.DateInput).toISOString().split('T')[0] === dateFilter;\r\n\r\n          return isMatchingProduct && isMatchingDate;\r\n        });\r\n  \r\n       \r\n        setDataSource(filteredData);\r\n\r\n\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.message);\r\n\r\n      });\r\n\r\n    //setLoading(false);\r\n  }, [searchQuery,dateFilter]);\r\n  useEffect(() => {\r\n    getData();\r\n\r\n  }, [getData]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const showDrawer = (record) => {\r\n    getListInputStorageById(record.InputId).then((res) => {\r\n      const InputData = res.data[0]; // Assuming res.data is an object containing supplier data\r\n      setInputStorage(InputData);\r\n      setOpen(true);\r\n    })\r\n      .catch((error) => {\r\n        message.error(error.message);\r\n      });\r\n\r\n\r\n  };\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      dataIndex: 'InputId',\r\n      key: dataSource.InputId,\r\n      render: (_, record, index) => (currentPage - 1) * 5 + index + 1,\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Product Name',\r\n      dataIndex: 'ProductName',\r\n      key: 'ProductName',\r\n      sorter: (a, b) => a.ProductName.localeCompare(b.ProductName),\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n\r\n    {\r\n      title: 'Quantity',\r\n      dataIndex: 'Quantity',\r\n      key: 'Quantity',\r\n      sorter: {\r\n        compare: (a, b) => a.Quantity - b.Quantity,\r\n        multiple: 2,\r\n      },\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Input Date',\r\n      dataIndex: 'DateInput',\r\n      key: 'DateInput',\r\n      sorter: (a, b) => new Date(a.DateInput) - new Date(b.DateInput),\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      width: '200px',\r\n      render: (_, record) => (\r\n        <span>\r\n          <Button\r\n            onClick={() => {\r\n              navigate(`/inputStorage/edit/${record.InputId}`)\r\n            }} >\r\n            <EditOutlined />\r\n          </Button>\r\n\r\n\r\n          <Button danger style={{ marginLeft: '10px' }} onClick={() => showModalDelete(record.InputId)}>\r\n            <DeleteOutlined />\r\n          </Button>\r\n\r\n\r\n        </span>\r\n\r\n      ),\r\n\r\n\r\n    },\r\n  ];\r\n\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const paginationConfig = {\r\n    current: currentPage, // Current page number\r\n    pageSize: 5,   // Number of items per page\r\n    total: dataSource.length, // Total number of items in the data source\r\n    // Other pagination properties like showTotal, showSizeChanger, etc.\r\n  };\r\n  const onChange = (pagination, filters, sorter, extra) => {\r\n    setCurrentPage(pagination.current);\r\n  };\r\n\r\n  //delete\r\n  const [isModalDelete, setIsModalDelete] = useState(false);\r\n  const [inputStorageDelete, setInputStorageDelete] = useState(undefined);\r\n  const handleOkDelete = () => {\r\n    deleteInputStorage(inputStorageDelete)\r\n      .then((res) => {\r\n        message.success('Input is deleted successfully');\r\n        setIsModalDelete(false);\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setIsModalDelete(false);\r\n  };\r\n\r\n  const showModalDelete = (id) => {\r\n    setInputStorageDelete(id);\r\n    setIsModalDelete(true);\r\n  };\r\n  return (\r\n\r\n    <>\r\n\r\n<Space  style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center',marginBottom:'15px' }}>\r\n  <DatePicker onChange={(date, dateString) => setDateFilter(dateString)} />\r\n\r\n  <Space>\r\n    <Input\r\n      placeholder=\"Search by product name\"\r\n      onChange={(e) => {\r\n        setSearchQuery(e.target.value);\r\n      }}\r\n      value={searchQuery}\r\n    />\r\n\r\n    <Button\r\n      type=\"primary\"\r\n\r\n      onClick={() => navigate(`/inputStorage/add`)}\r\n    >\r\n      Create new Input Storage\r\n    </Button>\r\n  </Space>\r\n</Space>\r\n\r\n      {dataInput && (\r\n\r\n        <div>\r\n          <Drawer title={\"Details \"} placement=\"right\" onClose={onClose} open={open}>\r\n            <p>Product Name: {dataInput.Product?.ProductName}</p>\r\n            <p>Quantity: {dataInput.Quantity}</p>\r\n            <p>Unit: {dataInput.Product?.Unit?.UnitName}</p>\r\n            <p>Input Date: {new Date(dataInput.DateInput).toLocaleDateString()}</p>\r\n            <p>Input Price: {dataInput.InputPrice}</p>\r\n            <p>Output Price: {dataInput.OutputPrice}</p>\r\n            <p>Supplier: {dataInput.Product?.Supplier?.DisplayName}</p>\r\n            <ul>\r\n              <li>Address: {dataInput.Product?.Supplier?.Address}</li>\r\n              <li>Phone: {dataInput.Product?.Supplier?.Phone}</li>\r\n              <li>Email: {dataInput.Product?.Supplier?.Email}</li>\r\n              <li>More Infomation: {dataInput.Product?.Supplier?.MoreInfo}</li>\r\n              <li>Contract Date:{new Date(dataInput.Product?.Supplier?.ContractDate).toLocaleDateString()} </li>\r\n            </ul>\r\n          </Drawer>\r\n        </div>\r\n      )}\r\n      <Table columns={columns} dataSource={dataSource} onChange={onChange} pagination={paginationConfig} />\r\n\r\n      <Modal\r\n        title='Are you sure?'\r\n        open={isModalDelete}\r\n        onOk={handleOkDelete}\r\n        onCancel={handleCancelDelete}\r\n        footer={null}\r\n      >\r\n        <p>Do you want to delete this Input Storage?</p>\r\n        <Button\r\n          type=\"primary\"\r\n          key='back'\r\n          onClick={handleOkDelete}\r\n        >\r\n          Delete\r\n        </Button>\r\n\r\n        <Button\r\n          className='button-modal'\r\n          key='submit'\r\n          style={{ marginLeft: '10px' }}\r\n          type='default' // Set the type to \"default\" or \"primary\" or \"ghost\"\r\n          onClick={handleCancelDelete}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Modal>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default InputStorage","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Customer\\CustomerIndex.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\customerService.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Customer\\EditCustomer.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Customer\\AddCustomer.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\inputStorageService.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\OutputStorage\\OutputStorage.jsx",["223","224"],[],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Drawer, Modal, Table, message, Button, Space, Input, DatePicker, Select, Typography } from 'antd';\r\nimport { deleteOutputStorage, getListOutputStorage, getListOutputStorageById } from '../../services/outputStorage';\r\nimport { getListCustomer } from '../../services/customerService';\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n} from '@ant-design/icons';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Option } from 'antd/es/mentions';\r\nfunction OutputStorage() {\r\n  const navigate = useNavigate();\r\n  const [dataSource, setDataSource] = useState([])\r\n  const [dataCustomer, setdataCustomer] = useState([])\r\n  const [dataInput, setInputStorage] = useState([])\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [dateFilter, setDateFilter] = useState(null);\r\n  const [customer, setCustomer] = useState(null);\r\n  const getData = useCallback(() => {\r\n    getListOutputStorage()\r\n      .then((res) => {\r\n\r\n        const convertedData = res.data.map((data) => {\r\n          const {\r\n            OutputId,\r\n            ProductId,\r\n            Quantity,\r\n            DateOutput,\r\n            InputPrice,\r\n            OutputPrice,\r\n            Product,\r\n            Customer\r\n          } = data;\r\n          return {\r\n            key: OutputId,\r\n            ProductId,\r\n            OutputId,\r\n            ProductName: `${Product?.ProductName}`,\r\n            CustomerName: `${Customer?.DisplayName}`,\r\n            Quantity,\r\n            DateOutput: `${new Date(DateOutput).toISOString().split('T')[0]}`,\r\n            InputPrice,\r\n            OutputPrice\r\n          }\r\n        });\r\n        const filteredData = convertedData.filter((data) => {\r\n          const isMatchingProduct = data.ProductName.toLowerCase().includes(searchQuery.toLowerCase());\r\n\r\n          const isMatchingDate = !dateFilter || new Date(data.DateOutput).toISOString().split('T')[0] === dateFilter;\r\n          const isSeclt = !customer || data.CustomerName.includes(customer);\r\n          return isMatchingProduct && isMatchingDate & isSeclt;\r\n        });\r\n\r\n        setDataSource(filteredData);\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.message);\r\n\r\n      });\r\n\r\n    //setLoading(false);\r\n  }, [searchQuery, dateFilter, customer]);\r\n  useEffect(() => {\r\n    getData();\r\n\r\n    getListCustomer().then((res) => {\r\n      setdataCustomer(res.data)\r\n      console.log(res.data)\r\n    }).catch((error) => {\r\n      message.error(error.message);\r\n    });\r\n  }, [getData]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const showDrawer = (record) => {\r\n    getListOutputStorageById(record.OutputId).then((res) => {\r\n      const InputData = res.data[0]; // Assuming res.data is an object containing supplier data\r\n      setInputStorage(InputData);\r\n      console.log(InputData)\r\n      setOpen(true);\r\n    })\r\n      .catch((error) => {\r\n        message.error(error.message);\r\n      });\r\n\r\n\r\n  };\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: 'STT',\r\n      dataIndex: 'InputId',\r\n      key: dataSource.InputId,\r\n      render: (_, record, index) => (currentPage - 1) * 5 + index + 1,\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Customer Name',\r\n      dataIndex: 'CustomerName',\r\n      key: 'CustomerName',\r\n      sorter: (a, b) => a.CustomerName.localeCompare(b.CustomerName),\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Product Name',\r\n      dataIndex: 'ProductName',\r\n      key: 'ProductName',\r\n      sorter: (a, b) => a.ProductName.localeCompare(b.ProductName),\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n\r\n    {\r\n      title: 'Quantity',\r\n      dataIndex: 'Quantity',\r\n      key: 'Quantity',\r\n      sorter: {\r\n        compare: (a, b) => a.Quantity - b.Quantity,\r\n        multiple: 2,\r\n      },\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Output Date',\r\n      dataIndex: 'DateOutput',\r\n      key: 'DateOutput',\r\n      sorter: (a, b) => new Date(a.DateOutput) - new Date(b.DateOutput),\r\n      onCell: (record) => {\r\n        return {\r\n          onClick: () => {\r\n            showDrawer(record);\r\n          },\r\n        };\r\n      },\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: '',\r\n      width: '200px',\r\n      render: (_, record) => (\r\n        <span >\r\n          <Button \r\n            onClick={() => {\r\n              navigate(`/outputStorage/edit/${record.OutputId}`)\r\n            }} >\r\n            <EditOutlined />\r\n          </Button>\r\n\r\n\r\n          <Button style={{ marginLeft: '10px' }} danger onClick={() => showModalDelete(record.OutputId)}>\r\n            <DeleteOutlined />\r\n          </Button>\r\n\r\n\r\n        </span>\r\n\r\n      ),\r\n\r\n\r\n    },\r\n  ];\r\n\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const paginationConfig = {\r\n    current: currentPage, // Current page number\r\n    pageSize: 5,   // Number of items per page\r\n    total: dataSource.length, // Total number of items in the data source\r\n    // Other pagination properties like showTotal, showSizeChanger, etc.\r\n  };\r\n  const onChange = (pagination, filters, sorter, extra) => {\r\n    setCurrentPage(pagination.current);\r\n  };\r\n  //delete\r\n  const [isModalDelete, setIsModalDelete] = useState(false);\r\n  const [outputStorageDelete, setOutputStorageDelete] = useState(undefined);\r\n  const handleOkDelete = () => {\r\n    deleteOutputStorage(outputStorageDelete)\r\n      .then((res) => {\r\n        message.success('Output is deleted successfully');\r\n        setIsModalDelete(false);\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setIsModalDelete(false);\r\n  };\r\n\r\n  const showModalDelete = (id) => {\r\n    setOutputStorageDelete(id);\r\n    setIsModalDelete(true);\r\n  };\r\n\r\n  return (\r\n\r\n    <>\r\n      <Space style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '15px' }}>\r\n        <div style={{ width: '400px' }}>\r\n\r\n          <DatePicker onChange={(date, dateString) => setDateFilter(dateString)} style={{ marginRight: '15px' }} />\r\n          <Select\r\n            style={{ width: '200px' }}\r\n            placeholder=\"Select customer name\"\r\n            onChange={(selectedCustomer) => setCustomer(selectedCustomer)}\r\n            optionLabelProp=\"label\"\r\n          >\r\n\r\n            <Select.Option key=\"none\" value={!customer} label=\"None\">\r\n              <Space>\r\n                None\r\n              </Space>\r\n            </Select.Option>\r\n\r\n            {/* Map through dataCustomer and create options */}\r\n            {dataCustomer && dataCustomer.map((u) => (\r\n              <Select.Option key={u.CustomerId} value={u.DisplayName} label={u.DisplayName}>\r\n                <Space>\r\n                  {u.DisplayName}\r\n                </Space>\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n        <Space>\r\n          <Input\r\n            placeholder=\"Search by product name\"\r\n            onChange={(e) => {\r\n              setSearchQuery(e.target.value);\r\n            }}\r\n            value={searchQuery}\r\n          />\r\n\r\n          <Button\r\n            type=\"primary\"\r\n\r\n            onClick={() => navigate(`/outputStorage/add`)}\r\n          >\r\n            Create new Output Storage\r\n          </Button>\r\n        </Space>\r\n      </Space>\r\n\r\n      {dataInput && (\r\n\r\n        <div>\r\n          <Drawer title={\"Details \"} placement=\"right\" onClose={onClose} open={open}>\r\n            <p>Product Name: {dataInput.Product?.ProductName}</p>\r\n            <p>Quantity: {dataInput.Quantity}</p>\r\n            <p>Unit: {dataInput.Product?.Unit?.UnitName}</p>\r\n            <p>Output Date: {new Date(dataInput.DateOutput).toLocaleDateString()}</p>\r\n            <p>Customer: {dataInput.Customer?.DisplayName}</p>\r\n            <ul>\r\n              <li>Address: {dataInput.Customer?.Address}</li>\r\n              <li>Phone: {dataInput.Customer?.Phone}</li>\r\n              <li>Email: {dataInput.Customer?.Email}</li>\r\n              <li>More Infomation: {dataInput.Customer?.MoreInfo}</li>\r\n              <li>Contract Date:{new Date(dataInput.Customer?.ContractDate).toLocaleDateString()} </li>\r\n            </ul>\r\n          </Drawer>\r\n        </div>\r\n      )}\r\n      <Table columns={columns} dataSource={dataSource} onChange={onChange} pagination={paginationConfig} />\r\n\r\n      <Modal\r\n        title='Are you sure?'\r\n        open={isModalDelete}\r\n        onOk={handleOkDelete}\r\n        onCancel={handleCancelDelete}\r\n        footer={null}\r\n      >\r\n        <p>Do you want to delete this Output Storage?</p>\r\n        <Button\r\n          type=\"primary\"\r\n          key='back'\r\n          onClick={handleOkDelete}\r\n        >\r\n          Delete\r\n        </Button>\r\n\r\n        <Button\r\n          className='button-modal'\r\n          key='submit'\r\n          style={{ marginLeft: '10px' }}\r\n          type='default' // Set the type to \"default\" or \"primary\" or \"ghost\"\r\n          onClick={handleCancelDelete}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OutputStorage","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\outputStorage.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\InputStorage\\AddInputStorage.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\InputStorage\\EditInputStorage.jsx",["225"],[],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  message,\r\n  Typography,\r\n  DatePicker\r\n} from 'antd';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { getProduct } from '../../services/storageService';\r\nimport {editInputStorageById, getListInputStorageById } from '../../services/inputStorageService';\r\nimport moment from 'moment';\r\nfunction EditInputStorage() {\r\n  const [form] = Form.useForm();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const id = params.InputId;\r\n  const[dataProduct,setdataProduct] = useState([])\r\n  const[dataInput,setInput] = useState([])\r\n  const onFinish = (values) => {\r\n    const data = {\r\n        InputId:  dataInput.InputId,\r\n      ProductId: values.ProductName,\r\n      Quantity: values.Quantity,\r\n      InputPrice: values.InputPrice,\r\n      OutputPrice: values.OutputPrice,\r\n      DateInput: values.DateInput,\r\n      Status: true,\r\n    };\r\n\r\n    editInputStorageById(data)\r\n    \t.then(() => {\r\n    \t\tmessage.success('Edit Input Storage successfully');\r\n    \t\tnavigate('/inputStorage');\r\n    \t})\r\n    \t.catch((err) => {\r\n    \t\tmessage.error(err.message);\r\n    \t});\r\n  };\r\n  useEffect(() => {\r\n\r\n    getListInputStorageById(id)\r\n    .then((res) => {\r\n      setInput(res.data[0])\r\n    })\r\n    .catch((err) => {\r\n      message.error(err.message);\r\n    });\r\n    getProduct()\r\n      .then((res) => {\r\n        setdataProduct(res.data)\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      });\r\n\r\n      \r\n\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className='container-fluid' style={{ display: 'contents' }}>\r\n\r\n        <Form\r\n          form={form}\r\n          labelCol={{\r\n            span: 6,\r\n          }}\r\n          wrapperCol={{\r\n            span: 10,\r\n          }}\r\n          layout=\"horizontal\"\r\n          onFinish={onFinish}\r\n\r\n          colon={false}\r\n\r\n          style={{\r\n            maxWidth: 900,\r\n            margin: '50px 350px'\r\n          }}\r\n          fields={[\r\n            {\r\n              name: 'ProductName',\r\n              value: dataInput?.Product?.ProductName,\r\n            \r\n            },\r\n            {\r\n              name: 'Quantity',\r\n              value: dataInput?.Quantity,\r\n            },\r\n            {\r\n              name: 'InputPrice',\r\n              value: dataInput?.InputPrice,\r\n            },\r\n            {\r\n              name: 'OutputPrice',\r\n              value: dataInput?.OutputPrice,\r\n            },\r\n            {\r\n              name: 'DateInput',\r\n              value: moment(dataInput?.DateInput),\r\n            },\r\n          ]}\r\n        >\r\n\r\n\r\n          <Form.Item \r\n          name=\"ProductName\" \r\n          label=\"Product\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Product Name is required',\r\n            },\r\n          ]}\r\n          >\r\n            <Select >\r\n              {dataProduct &&\r\n                dataProduct.map((u) => (\r\n                  <Select.Option key={u.ProductId} value={u.ProductId}>\r\n                    <Typography.Text>\r\n                      {u.ProductName}\r\n                    </Typography.Text>\r\n                  </Select.Option>\r\n                ))}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"Quantity\"\r\n            label=\"Quantity\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Quantity is required',\r\n              },\r\n            ]}\r\n          \r\n          >\r\n           <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"InputPrice\"\r\n            label=\"InputPrice\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Input Price is required',\r\n              },\r\n            ]}\r\n          >\r\n              <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"OutputPrice\"\r\n            label=\"OutputPrice\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Output Price is required',\r\n              },\r\n            ]}\r\n          >\r\n              <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"DateInput\"\r\n            label=\"Date Input\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Date Input date is required',\r\n              },\r\n            ]}\r\n          >\r\n             <DatePicker\r\n\t\t\t\t\t\tinputReadOnly={true}\r\n\t\t\t\t\t\tformat='YYYY-MM-DD'\r\n\t\t\t\t\t/>\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\" \">\r\n            <Button type=\"primary\"\r\n             htmlType=\"submit\"\r\n         \r\n            >\r\n              Submit\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={() => navigate('/inputStorage')}\r\n              style={{ marginLeft: '5px' }}>\r\n              Cancel\r\n            </Button>\r\n          </Form.Item>\r\n\r\n        </Form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditInputStorage","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\OutputStorage\\AddOutputStorage.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\OutputStorage\\EditOutputProduct.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\DashBoard\\DashBoard.jsx",["226","227"],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\Guard\\AdminGuard.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Login\\LogOutConfirm.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\components\\Header\\Header.jsx",["228","229","230","231","232","233"],[],"import React, { useContext, useState } from 'react'\r\nimport { Header as HeaderAntd } from 'antd/lib/layout/layout';\r\nimport { Button, Menu, Modal, message, theme } from 'antd';\r\nimport {\r\n\r\n    CaretDownOutlined,\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../contexts/AuthContext';\r\nimport LogOutConfirm from '../../views/Login/LogOutConfirm';\r\nimport { logout } from '../../services/authService';\r\nconst Header = () => {\r\n    const [logOutModalOpen, setLogOutModalOpen] = useState(false);\r\n    const {\r\n        token: { colorBgContainer },\r\n    } = theme.useToken();\r\n\r\n    const {\r\n        authContext: { username },\r\n    } = useContext(AuthContext);\r\n    const UserDropdown = ({ onClick }) => (\r\n        <Button style={{width:'100px'}} onClick={onClick}>Logout</Button>\r\n    );\r\n\r\n    const navItems = [\r\n        {\r\n            label: (\r\n                <>\r\n                    {username}   \r\n                </>\r\n            ),\r\n            key: 'username',\r\n            \r\n        },\r\n        {\r\n            label: (\r\n                <>\r\n                    <Button style={{width:'80px'}} onClick={() => setLogOutModalOpen(true)}>Logout</Button>\r\n                </>\r\n            ),\r\n            key: 'logout',\r\n            \r\n        },\r\n    ];\r\n    return (\r\n        <>\r\n            <LogOutConfirm\r\n                logOutModalOpen={logOutModalOpen}\r\n                setLogOutModalOpen={setLogOutModalOpen}\r\n            />\r\n\r\n            <HeaderAntd\r\n                style={{\r\n                    padding: 0,\r\n                    background: colorBgContainer,\r\n                    height: '66px',\r\n                }}\r\n            >\r\n                <div style={{ float: 'right', marginRight: '40px' }}>\r\n                    <Menu mode='horizontal' items={navItems} disabledOverflow></Menu>\r\n                </div>\r\n\r\n            </HeaderAntd>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\NotFound\\NotFound.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\NotFound\\Unthorized.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Supplier\\Supplier.jsx",["234","235","236","237"],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Supplier\\EditSupplier.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\Supplier\\AddSupplier.jsx",["238","239","240","241","242","243","244","245","246","247"],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\User\\User.jsx",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\services\\userService.js",[],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\User\\EditUser.jsx",["248","249","250","251","252"],[],"C:\\Users\\Manh Lam\\Desktop\\Project_ManageStorage\\frontend\\src\\views\\User\\AddUser.jsx",["253","254","255","256","257","258","259","260","261"],[],{"ruleId":"262","severity":1,"message":"263","line":10,"column":8,"nodeType":"264","messageId":"265","endLine":10,"endColumn":14},{"ruleId":"262","severity":1,"message":"266","line":2,"column":53,"nodeType":"264","messageId":"265","endLine":2,"endColumn":59},{"ruleId":"262","severity":1,"message":"267","line":2,"column":61,"nodeType":"264","messageId":"265","endLine":2,"endColumn":66},{"ruleId":"262","severity":1,"message":"268","line":16,"column":8,"nodeType":"264","messageId":"265","endLine":16,"endColumn":21},{"ruleId":"262","severity":1,"message":"269","line":96,"column":9,"nodeType":"264","messageId":"265","endLine":96,"endColumn":24},{"ruleId":"262","severity":1,"message":"270","line":96,"column":26,"nodeType":"264","messageId":"265","endLine":96,"endColumn":44},{"ruleId":"262","severity":1,"message":"271","line":105,"column":8,"nodeType":"264","messageId":"265","endLine":105,"endColumn":20},{"ruleId":"272","severity":1,"message":"273","line":134,"column":6,"nodeType":"274","endLine":134,"endColumn":56},{"ruleId":"275","severity":1,"message":"276","line":160,"column":7,"nodeType":"274","endLine":167,"endColumn":8},{"ruleId":"262","severity":1,"message":"263","line":9,"column":8,"nodeType":"264","messageId":"265","endLine":9,"endColumn":14},{"ruleId":"262","severity":1,"message":"277","line":2,"column":83,"nodeType":"264","messageId":"265","endLine":2,"endColumn":93},{"ruleId":"262","severity":1,"message":"278","line":10,"column":10,"nodeType":"264","messageId":"265","endLine":10,"endColumn":16},{"ruleId":"279","severity":1,"message":"280","line":61,"column":6,"nodeType":"281","endLine":61,"endColumn":8,"suggestions":"282"},{"ruleId":"262","severity":1,"message":"283","line":14,"column":5,"nodeType":"264","messageId":"265","endLine":14,"endColumn":24},{"ruleId":"262","severity":1,"message":"284","line":22,"column":20,"nodeType":"264","messageId":"265","endLine":22,"endColumn":24},{"ruleId":"262","severity":1,"message":"267","line":3,"column":24,"nodeType":"264","messageId":"265","endLine":3,"endColumn":29},{"ruleId":"262","severity":1,"message":"285","line":3,"column":31,"nodeType":"264","messageId":"265","endLine":3,"endColumn":38},{"ruleId":"262","severity":1,"message":"286","line":6,"column":5,"nodeType":"264","messageId":"265","endLine":6,"endColumn":22},{"ruleId":"262","severity":1,"message":"287","line":8,"column":10,"nodeType":"264","messageId":"265","endLine":8,"endColumn":14},{"ruleId":"262","severity":1,"message":"288","line":11,"column":10,"nodeType":"264","messageId":"265","endLine":11,"endColumn":16},{"ruleId":"262","severity":1,"message":"289","line":21,"column":11,"nodeType":"264","messageId":"265","endLine":21,"endColumn":23},{"ruleId":"262","severity":1,"message":"290","line":8,"column":10,"nodeType":"264","messageId":"265","endLine":8,"endColumn":24},{"ruleId":"262","severity":1,"message":"291","line":8,"column":26,"nodeType":"264","messageId":"265","endLine":8,"endColumn":44},{"ruleId":"262","severity":1,"message":"292","line":8,"column":46,"nodeType":"264","messageId":"265","endLine":8,"endColumn":59},{"ruleId":"262","severity":1,"message":"263","line":10,"column":8,"nodeType":"264","messageId":"265","endLine":10,"endColumn":14},{"ruleId":"262","severity":1,"message":"293","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":26},{"ruleId":"262","severity":1,"message":"294","line":6,"column":3,"nodeType":"264","messageId":"265","endLine":6,"endColumn":9},{"ruleId":"262","severity":1,"message":"277","line":8,"column":3,"nodeType":"264","messageId":"265","endLine":8,"endColumn":13},{"ruleId":"262","severity":1,"message":"295","line":12,"column":10,"nodeType":"264","messageId":"265","endLine":12,"endColumn":20},{"ruleId":"262","severity":1,"message":"296","line":13,"column":10,"nodeType":"264","messageId":"265","endLine":13,"endColumn":21},{"ruleId":"262","severity":1,"message":"297","line":14,"column":27,"nodeType":"264","messageId":"265","endLine":14,"endColumn":42},{"ruleId":"262","severity":1,"message":"298","line":18,"column":10,"nodeType":"264","messageId":"265","endLine":18,"endColumn":14},{"ruleId":"262","severity":1,"message":"299","line":18,"column":16,"nodeType":"264","messageId":"265","endLine":18,"endColumn":23},{"ruleId":"262","severity":1,"message":"300","line":19,"column":10,"nodeType":"264","messageId":"265","endLine":19,"endColumn":18},{"ruleId":"262","severity":1,"message":"301","line":19,"column":20,"nodeType":"264","messageId":"265","endLine":19,"endColumn":31},{"ruleId":"262","severity":1,"message":"277","line":8,"column":5,"nodeType":"264","messageId":"265","endLine":8,"endColumn":15},{"ruleId":"262","severity":1,"message":"302","line":9,"column":5,"nodeType":"264","messageId":"265","endLine":9,"endColumn":15},{"ruleId":"262","severity":1,"message":"303","line":13,"column":10,"nodeType":"264","messageId":"265","endLine":13,"endColumn":25},{"ruleId":"262","severity":1,"message":"297","line":13,"column":27,"nodeType":"264","messageId":"265","endLine":13,"endColumn":42},{"ruleId":"262","severity":1,"message":"304","line":14,"column":10,"nodeType":"264","messageId":"265","endLine":14,"endColumn":17},{"ruleId":"262","severity":1,"message":"293","line":1,"column":17,"nodeType":"264","messageId":"265","endLine":1,"endColumn":26},{"ruleId":"262","severity":1,"message":"277","line":8,"column":5,"nodeType":"264","messageId":"265","endLine":8,"endColumn":15},{"ruleId":"262","severity":1,"message":"302","line":9,"column":5,"nodeType":"264","messageId":"265","endLine":9,"endColumn":15},{"ruleId":"262","severity":1,"message":"303","line":13,"column":10,"nodeType":"264","messageId":"265","endLine":13,"endColumn":25},{"ruleId":"262","severity":1,"message":"297","line":13,"column":27,"nodeType":"264","messageId":"265","endLine":13,"endColumn":42},{"ruleId":"262","severity":1,"message":"298","line":18,"column":12,"nodeType":"264","messageId":"265","endLine":18,"endColumn":16},{"ruleId":"262","severity":1,"message":"299","line":18,"column":18,"nodeType":"264","messageId":"265","endLine":18,"endColumn":25},{"ruleId":"262","severity":1,"message":"305","line":19,"column":12,"nodeType":"264","messageId":"265","endLine":19,"endColumn":16},{"ruleId":"262","severity":1,"message":"306","line":19,"column":18,"nodeType":"264","messageId":"265","endLine":19,"endColumn":25},"no-unused-vars","'Search' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Modal' is defined but never used.","'LogOutConfirm' is defined but never used.","'logOutModalOpen' is assigned a value but never used.","'setLogOutModalOpen' is assigned a value but never used.","'handleLogOut' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Typography' is defined but never used.","'Option' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["307"],"'ExclamationOutlined' is defined but never used.","'Text' is assigned a value but never used.","'message' is defined but never used.","'CaretDownOutlined' is defined but never used.","'Link' is defined but never used.","'logout' is defined but never used.","'UserDropdown' is assigned a value but never used.","'getListStorage' is defined but never used.","'getSupllierStorage' is defined but never used.","'deleteProduct' is defined but never used.","'useEffect' is defined but never used.","'Select' is defined but never used.","'addProduct' is defined but never used.","'getListUnit' is defined but never used.","'getListSupplier' is defined but never used.","'unit' is assigned a value but never used.","'setUnit' is assigned a value but never used.","'supplier' is assigned a value but never used.","'setSupplier' is assigned a value but never used.","'DatePicker' is defined but never used.","'addListSupplier' is defined but never used.","'addUser' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.",{"desc":"308","fix":"309"},"Update the dependencies array to be: [id]",{"range":"310","text":"311"},[1565,1567],"[id]"]